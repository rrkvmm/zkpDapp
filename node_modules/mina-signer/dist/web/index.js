var nn=Object.create;var Wt=Object.defineProperty;var rn=Object.getOwnPropertyDescriptor;var on=Object.getOwnPropertyNames;var ln=Object.getPrototypeOf,an=Object.prototype.hasOwnProperty;var xe=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var sn=(e,t,n,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of on(t))!an.call(e,o)&&o!==n&&Wt(e,o,{get:()=>t[o],enumerable:!(r=rn(t,o))||r.enumerable});return e};var pt=(e,t,n)=>(n=e!=null?nn(ln(e)):{},sn(t||!e||!e.__esModule?Wt(n,"default",{value:e,enumerable:!0}):n,e));var m0=xe((exports,module)=>{(function(){"use strict";var ERROR="input is invalid type",WINDOW=typeof window=="object",root=WINDOW?window:{};root.JS_SHA256_NO_WINDOW&&(WINDOW=!1);var WEB_WORKER=!WINDOW&&typeof self=="object",NODE_JS=!root.JS_SHA256_NO_NODE_JS&&typeof process=="object"&&process.versions&&process.versions.node;NODE_JS?root=global:WEB_WORKER&&(root=self);var COMMON_JS=!root.JS_SHA256_NO_COMMON_JS&&typeof module=="object"&&module.exports,AMD=typeof define=="function"&&define.amd,ARRAY_BUFFER=!root.JS_SHA256_NO_ARRAY_BUFFER&&typeof ArrayBuffer<"u",HEX_CHARS="0123456789abcdef".split(""),EXTRA=[-2147483648,8388608,32768,128],SHIFT=[24,16,8,0],K=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],OUTPUT_TYPES=["hex","array","digest","arrayBuffer"],blocks=[];(root.JS_SHA256_NO_NODE_JS||!Array.isArray)&&(Array.isArray=function(e){return Object.prototype.toString.call(e)==="[object Array]"}),ARRAY_BUFFER&&(root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW||!ArrayBuffer.isView)&&(ArrayBuffer.isView=function(e){return typeof e=="object"&&e.buffer&&e.buffer.constructor===ArrayBuffer});var createOutputMethod=function(e,t){return function(n){return new Sha256(t,!0).update(n)[e]()}},createMethod=function(e){var t=createOutputMethod("hex",e);NODE_JS&&(t=nodeWrap(t,e)),t.create=function(){return new Sha256(e)},t.update=function(o){return t.create().update(o)};for(var n=0;n<OUTPUT_TYPES.length;++n){var r=OUTPUT_TYPES[n];t[r]=createOutputMethod(r,e)}return t},nodeWrap=function(method,is224){var crypto=eval("require('crypto')"),Buffer=eval("require('buffer').Buffer"),algorithm=is224?"sha224":"sha256",nodeMethod=function(e){if(typeof e=="string")return crypto.createHash(algorithm).update(e,"utf8").digest("hex");if(e==null)throw new Error(ERROR);return e.constructor===ArrayBuffer&&(e=new Uint8Array(e)),Array.isArray(e)||ArrayBuffer.isView(e)||e.constructor===Buffer?crypto.createHash(algorithm).update(new Buffer(e)).digest("hex"):method(e)};return nodeMethod},createHmacOutputMethod=function(e,t){return function(n,r){return new HmacSha256(n,t,!0).update(r)[e]()}},createHmacMethod=function(e){var t=createHmacOutputMethod("hex",e);t.create=function(o){return new HmacSha256(o,e)},t.update=function(o,i){return t.create(o).update(i)};for(var n=0;n<OUTPUT_TYPES.length;++n){var r=OUTPUT_TYPES[n];t[r]=createHmacOutputMethod(r,e)}return t};function Sha256(e,t){t?(blocks[0]=blocks[16]=blocks[1]=blocks[2]=blocks[3]=blocks[4]=blocks[5]=blocks[6]=blocks[7]=blocks[8]=blocks[9]=blocks[10]=blocks[11]=blocks[12]=blocks[13]=blocks[14]=blocks[15]=0,this.blocks=blocks):this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],e?(this.h0=3238371032,this.h1=914150663,this.h2=812702999,this.h3=4144912697,this.h4=4290775857,this.h5=1750603025,this.h6=1694076839,this.h7=3204075428):(this.h0=1779033703,this.h1=3144134277,this.h2=1013904242,this.h3=2773480762,this.h4=1359893119,this.h5=2600822924,this.h6=528734635,this.h7=1541459225),this.block=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1,this.first=!0,this.is224=e}Sha256.prototype.update=function(e){if(!this.finalized){var t,n=typeof e;if(n!=="string"){if(n==="object"){if(e===null)throw new Error(ERROR);if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!Array.isArray(e)&&(!ARRAY_BUFFER||!ArrayBuffer.isView(e)))throw new Error(ERROR)}else throw new Error(ERROR);t=!0}for(var r,o=0,i,l=e.length,a=this.blocks;o<l;){if(this.hashed&&(this.hashed=!1,a[0]=this.block,a[16]=a[1]=a[2]=a[3]=a[4]=a[5]=a[6]=a[7]=a[8]=a[9]=a[10]=a[11]=a[12]=a[13]=a[14]=a[15]=0),t)for(i=this.start;o<l&&i<64;++o)a[i>>2]|=e[o]<<SHIFT[i++&3];else for(i=this.start;o<l&&i<64;++o)r=e.charCodeAt(o),r<128?a[i>>2]|=r<<SHIFT[i++&3]:r<2048?(a[i>>2]|=(192|r>>6)<<SHIFT[i++&3],a[i>>2]|=(128|r&63)<<SHIFT[i++&3]):r<55296||r>=57344?(a[i>>2]|=(224|r>>12)<<SHIFT[i++&3],a[i>>2]|=(128|r>>6&63)<<SHIFT[i++&3],a[i>>2]|=(128|r&63)<<SHIFT[i++&3]):(r=65536+((r&1023)<<10|e.charCodeAt(++o)&1023),a[i>>2]|=(240|r>>18)<<SHIFT[i++&3],a[i>>2]|=(128|r>>12&63)<<SHIFT[i++&3],a[i>>2]|=(128|r>>6&63)<<SHIFT[i++&3],a[i>>2]|=(128|r&63)<<SHIFT[i++&3]);this.lastByteIndex=i,this.bytes+=i-this.start,i>=64?(this.block=a[16],this.start=i-64,this.hash(),this.hashed=!0):this.start=i}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this}},Sha256.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex;e[16]=this.block,e[t>>2]|=EXTRA[t&3],this.block=e[16],t>=56&&(this.hashed||this.hash(),e[0]=this.block,e[16]=e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=0),e[14]=this.hBytes<<3|this.bytes>>>29,e[15]=this.bytes<<3,this.hash()}},Sha256.prototype.hash=function(){var e=this.h0,t=this.h1,n=this.h2,r=this.h3,o=this.h4,i=this.h5,l=this.h6,a=this.h7,s=this.blocks,f,u,d,c,p,y,g,b,m,S,w;for(f=16;f<64;++f)p=s[f-15],u=(p>>>7|p<<25)^(p>>>18|p<<14)^p>>>3,p=s[f-2],d=(p>>>17|p<<15)^(p>>>19|p<<13)^p>>>10,s[f]=s[f-16]+u+s[f-7]+d<<0;for(w=t&n,f=0;f<64;f+=4)this.first?(this.is224?(b=300032,p=s[0]-1413257819,a=p-150054599<<0,r=p+24177077<<0):(b=704751109,p=s[0]-210244248,a=p-1521486534<<0,r=p+143694565<<0),this.first=!1):(u=(e>>>2|e<<30)^(e>>>13|e<<19)^(e>>>22|e<<10),d=(o>>>6|o<<26)^(o>>>11|o<<21)^(o>>>25|o<<7),b=e&t,c=b^e&n^w,g=o&i^~o&l,p=a+d+g+K[f]+s[f],y=u+c,a=r+p<<0,r=p+y<<0),u=(r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10),d=(a>>>6|a<<26)^(a>>>11|a<<21)^(a>>>25|a<<7),m=r&e,c=m^r&t^b,g=a&o^~a&i,p=l+d+g+K[f+1]+s[f+1],y=u+c,l=n+p<<0,n=p+y<<0,u=(n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10),d=(l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7),S=n&r,c=S^n&e^m,g=l&a^~l&o,p=i+d+g+K[f+2]+s[f+2],y=u+c,i=t+p<<0,t=p+y<<0,u=(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10),d=(i>>>6|i<<26)^(i>>>11|i<<21)^(i>>>25|i<<7),w=t&n,c=w^t&r^S,g=i&l^~i&a,p=o+d+g+K[f+3]+s[f+3],y=u+c,o=e+p<<0,e=p+y<<0;this.h0=this.h0+e<<0,this.h1=this.h1+t<<0,this.h2=this.h2+n<<0,this.h3=this.h3+r<<0,this.h4=this.h4+o<<0,this.h5=this.h5+i<<0,this.h6=this.h6+l<<0,this.h7=this.h7+a<<0},Sha256.prototype.hex=function(){this.finalize();var e=this.h0,t=this.h1,n=this.h2,r=this.h3,o=this.h4,i=this.h5,l=this.h6,a=this.h7,s=HEX_CHARS[e>>28&15]+HEX_CHARS[e>>24&15]+HEX_CHARS[e>>20&15]+HEX_CHARS[e>>16&15]+HEX_CHARS[e>>12&15]+HEX_CHARS[e>>8&15]+HEX_CHARS[e>>4&15]+HEX_CHARS[e&15]+HEX_CHARS[t>>28&15]+HEX_CHARS[t>>24&15]+HEX_CHARS[t>>20&15]+HEX_CHARS[t>>16&15]+HEX_CHARS[t>>12&15]+HEX_CHARS[t>>8&15]+HEX_CHARS[t>>4&15]+HEX_CHARS[t&15]+HEX_CHARS[n>>28&15]+HEX_CHARS[n>>24&15]+HEX_CHARS[n>>20&15]+HEX_CHARS[n>>16&15]+HEX_CHARS[n>>12&15]+HEX_CHARS[n>>8&15]+HEX_CHARS[n>>4&15]+HEX_CHARS[n&15]+HEX_CHARS[r>>28&15]+HEX_CHARS[r>>24&15]+HEX_CHARS[r>>20&15]+HEX_CHARS[r>>16&15]+HEX_CHARS[r>>12&15]+HEX_CHARS[r>>8&15]+HEX_CHARS[r>>4&15]+HEX_CHARS[r&15]+HEX_CHARS[o>>28&15]+HEX_CHARS[o>>24&15]+HEX_CHARS[o>>20&15]+HEX_CHARS[o>>16&15]+HEX_CHARS[o>>12&15]+HEX_CHARS[o>>8&15]+HEX_CHARS[o>>4&15]+HEX_CHARS[o&15]+HEX_CHARS[i>>28&15]+HEX_CHARS[i>>24&15]+HEX_CHARS[i>>20&15]+HEX_CHARS[i>>16&15]+HEX_CHARS[i>>12&15]+HEX_CHARS[i>>8&15]+HEX_CHARS[i>>4&15]+HEX_CHARS[i&15]+HEX_CHARS[l>>28&15]+HEX_CHARS[l>>24&15]+HEX_CHARS[l>>20&15]+HEX_CHARS[l>>16&15]+HEX_CHARS[l>>12&15]+HEX_CHARS[l>>8&15]+HEX_CHARS[l>>4&15]+HEX_CHARS[l&15];return this.is224||(s+=HEX_CHARS[a>>28&15]+HEX_CHARS[a>>24&15]+HEX_CHARS[a>>20&15]+HEX_CHARS[a>>16&15]+HEX_CHARS[a>>12&15]+HEX_CHARS[a>>8&15]+HEX_CHARS[a>>4&15]+HEX_CHARS[a&15]),s},Sha256.prototype.toString=Sha256.prototype.hex,Sha256.prototype.digest=function(){this.finalize();var e=this.h0,t=this.h1,n=this.h2,r=this.h3,o=this.h4,i=this.h5,l=this.h6,a=this.h7,s=[e>>24&255,e>>16&255,e>>8&255,e&255,t>>24&255,t>>16&255,t>>8&255,t&255,n>>24&255,n>>16&255,n>>8&255,n&255,r>>24&255,r>>16&255,r>>8&255,r&255,o>>24&255,o>>16&255,o>>8&255,o&255,i>>24&255,i>>16&255,i>>8&255,i&255,l>>24&255,l>>16&255,l>>8&255,l&255];return this.is224||s.push(a>>24&255,a>>16&255,a>>8&255,a&255),s},Sha256.prototype.array=Sha256.prototype.digest,Sha256.prototype.arrayBuffer=function(){this.finalize();var e=new ArrayBuffer(this.is224?28:32),t=new DataView(e);return t.setUint32(0,this.h0),t.setUint32(4,this.h1),t.setUint32(8,this.h2),t.setUint32(12,this.h3),t.setUint32(16,this.h4),t.setUint32(20,this.h5),t.setUint32(24,this.h6),this.is224||t.setUint32(28,this.h7),e};function HmacSha256(e,t,n){var r,o=typeof e;if(o==="string"){var i=[],l=e.length,a=0,s;for(r=0;r<l;++r)s=e.charCodeAt(r),s<128?i[a++]=s:s<2048?(i[a++]=192|s>>6,i[a++]=128|s&63):s<55296||s>=57344?(i[a++]=224|s>>12,i[a++]=128|s>>6&63,i[a++]=128|s&63):(s=65536+((s&1023)<<10|e.charCodeAt(++r)&1023),i[a++]=240|s>>18,i[a++]=128|s>>12&63,i[a++]=128|s>>6&63,i[a++]=128|s&63);e=i}else if(o==="object"){if(e===null)throw new Error(ERROR);if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!Array.isArray(e)&&(!ARRAY_BUFFER||!ArrayBuffer.isView(e)))throw new Error(ERROR)}else throw new Error(ERROR);e.length>64&&(e=new Sha256(t,!0).update(e).array());var f=[],u=[];for(r=0;r<64;++r){var d=e[r]||0;f[r]=92^d,u[r]=54^d}Sha256.call(this,t,n),this.update(u),this.oKeyPad=f,this.inner=!0,this.sharedMemory=n}HmacSha256.prototype=new Sha256,HmacSha256.prototype.finalize=function(){if(Sha256.prototype.finalize.call(this),this.inner){this.inner=!1;var e=this.array();Sha256.call(this,this.is224,this.sharedMemory),this.update(this.oKeyPad),this.update(e),Sha256.prototype.finalize.call(this)}};var exports=createMethod();exports.sha256=exports,exports.sha224=createMethod(!0),exports.sha256.hmac=createHmacMethod(),exports.sha224.hmac=createHmacMethod(!0),COMMON_JS?module.exports=exports:(root.sha256=exports.sha256,root.sha224=exports.sha224,AMD&&define(function(){return exports}))})()});var Rt=xe((D6,Y0)=>{var o2="Input must be an string, Buffer or Uint8Array";function l2(e){let t;if(e instanceof Uint8Array)t=e;else if(typeof e=="string")t=new TextEncoder().encode(e);else throw new Error(o2);return t}function a2(e){return Array.prototype.map.call(e,function(t){return(t<16?"0":"")+t.toString(16)}).join("")}function it(e){return(4294967296+e).toString(16).substring(1)}function s2(e,t,n){let r=`
`+e+" = ";for(let o=0;o<t.length;o+=2){if(n===32)r+=it(t[o]).toUpperCase(),r+=" ",r+=it(t[o+1]).toUpperCase();else if(n===64)r+=it(t[o+1]).toUpperCase(),r+=it(t[o]).toUpperCase();else throw new Error("Invalid size "+n);o%6===4?r+=`
`+new Array(e.length+4).join(" "):o<t.length-2&&(r+=" ")}console.log(r)}function u2(e,t,n){let r=new Date().getTime(),o=new Uint8Array(t);for(let l=0;l<t;l++)o[l]=l%256;let i=new Date().getTime();console.log("Generated random input in "+(i-r)+"ms"),r=i;for(let l=0;l<n;l++){let a=e(o),s=new Date().getTime(),f=s-r;r=s,console.log("Hashed in "+f+"ms: "+a.substring(0,20)+"..."),console.log(Math.round(t/(1<<20)/(f/1e3)*100)/100+" MB PER SECOND")}}Y0.exports={normalizeInput:l2,toHex:a2,debugPrint:s2,testSpeed:u2}});var a1=xe((q6,l1)=>{var lt=Rt();function ot(e,t,n){let r=e[t]+e[n],o=e[t+1]+e[n+1];r>=4294967296&&o++,e[t]=r,e[t+1]=o}function Q0(e,t,n,r){let o=e[t]+n;n<0&&(o+=4294967296);let i=e[t+1]+r;o>=4294967296&&i++,e[t]=o,e[t+1]=i}function e1(e,t){return e[t]^e[t+1]<<8^e[t+2]<<16^e[t+3]<<24}function ne(e,t,n,r,o,i){let l=Te[o],a=Te[o+1],s=Te[i],f=Te[i+1];ot(E,e,t),Q0(E,e,l,a);let u=E[r]^E[e],d=E[r+1]^E[e+1];E[r]=d,E[r+1]=u,ot(E,n,r),u=E[t]^E[n],d=E[t+1]^E[n+1],E[t]=u>>>24^d<<8,E[t+1]=d>>>24^u<<8,ot(E,e,t),Q0(E,e,s,f),u=E[r]^E[e],d=E[r+1]^E[e+1],E[r]=u>>>16^d<<16,E[r+1]=d>>>16^u<<16,ot(E,n,r),u=E[t]^E[n],d=E[t+1]^E[n+1],E[t]=d>>>31^u<<1,E[t+1]=u>>>31^d<<1}var t1=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),c2=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3],_=new Uint8Array(c2.map(function(e){return e*2})),E=new Uint32Array(32),Te=new Uint32Array(32);function n1(e,t){let n=0;for(n=0;n<16;n++)E[n]=e.h[n],E[n+16]=t1[n];for(E[24]=E[24]^e.t,E[25]=E[25]^e.t/4294967296,t&&(E[28]=~E[28],E[29]=~E[29]),n=0;n<32;n++)Te[n]=e1(e.b,4*n);for(n=0;n<12;n++)ne(0,8,16,24,_[n*16+0],_[n*16+1]),ne(2,10,18,26,_[n*16+2],_[n*16+3]),ne(4,12,20,28,_[n*16+4],_[n*16+5]),ne(6,14,22,30,_[n*16+6],_[n*16+7]),ne(0,10,20,30,_[n*16+8],_[n*16+9]),ne(2,12,22,24,_[n*16+10],_[n*16+11]),ne(4,14,16,26,_[n*16+12],_[n*16+13]),ne(6,8,18,28,_[n*16+14],_[n*16+15]);for(n=0;n<16;n++)e.h[n]=e.h[n]^E[n]^E[n+16]}var re=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);function r1(e,t,n,r){if(e===0||e>64)throw new Error("Illegal output length, expected 0 < length <= 64");if(t&&t.length>64)throw new Error("Illegal key, expected Uint8Array with 0 < length <= 64");if(n&&n.length!==16)throw new Error("Illegal salt, expected Uint8Array with length is 16");if(r&&r.length!==16)throw new Error("Illegal personal, expected Uint8Array with length is 16");let o={b:new Uint8Array(128),h:new Uint32Array(16),t:0,c:0,outlen:e};re.fill(0),re[0]=e,t&&(re[1]=t.length),re[2]=1,re[3]=1,n&&re.set(n,32),r&&re.set(r,48);for(let i=0;i<16;i++)o.h[i]=t1[i]^e1(re,i*4);return t&&(Mt(o,t),o.c=128),o}function Mt(e,t){for(let n=0;n<t.length;n++)e.c===128&&(e.t+=e.c,n1(e,!1),e.c=0),e.b[e.c++]=t[n]}function i1(e){for(e.t+=e.c;e.c<128;)e.b[e.c++]=0;n1(e,!0);let t=new Uint8Array(e.outlen);for(let n=0;n<e.outlen;n++)t[n]=e.h[n>>2]>>8*(n&3);return t}function o1(e,t,n,r,o){n=n||64,e=lt.normalizeInput(e),r&&(r=lt.normalizeInput(r)),o&&(o=lt.normalizeInput(o));let i=r1(n,t,r,o);return Mt(i,e),i1(i)}function p2(e,t,n,r,o){let i=o1(e,t,n,r,o);return lt.toHex(i)}l1.exports={blake2b:o1,blake2bHex:p2,blake2bInit:r1,blake2bUpdate:Mt,blake2bFinal:i1}});var y1=xe((V6,m1)=>{var s1=Rt();function f2(e,t){return e[t]^e[t+1]<<8^e[t+2]<<16^e[t+3]<<24}function ie(e,t,n,r,o,i){A[e]=A[e]+A[t]+o,A[r]=at(A[r]^A[e],16),A[n]=A[n]+A[r],A[t]=at(A[t]^A[n],12),A[e]=A[e]+A[t]+i,A[r]=at(A[r]^A[e],8),A[n]=A[n]+A[r],A[t]=at(A[t]^A[n],7)}function at(e,t){return e>>>t^e<<32-t}var u1=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),z=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0]),A=new Uint32Array(16),M=new Uint32Array(16);function c1(e,t){let n=0;for(n=0;n<8;n++)A[n]=e.h[n],A[n+8]=u1[n];for(A[12]^=e.t,A[13]^=e.t/4294967296,t&&(A[14]=~A[14]),n=0;n<16;n++)M[n]=f2(e.b,4*n);for(n=0;n<10;n++)ie(0,4,8,12,M[z[n*16+0]],M[z[n*16+1]]),ie(1,5,9,13,M[z[n*16+2]],M[z[n*16+3]]),ie(2,6,10,14,M[z[n*16+4]],M[z[n*16+5]]),ie(3,7,11,15,M[z[n*16+6]],M[z[n*16+7]]),ie(0,5,10,15,M[z[n*16+8]],M[z[n*16+9]]),ie(1,6,11,12,M[z[n*16+10]],M[z[n*16+11]]),ie(2,7,8,13,M[z[n*16+12]],M[z[n*16+13]]),ie(3,4,9,14,M[z[n*16+14]],M[z[n*16+15]]);for(n=0;n<8;n++)e.h[n]^=A[n]^A[n+8]}function p1(e,t){if(!(e>0&&e<=32))throw new Error("Incorrect output length, should be in [1, 32]");let n=t?t.length:0;if(t&&!(n>0&&n<=32))throw new Error("Incorrect key length, should be in [1, 32]");let r={h:new Uint32Array(u1),b:new Uint8Array(64),c:0,t:0,outlen:e};return r.h[0]^=16842752^n<<8^e,n>0&&(Ot(r,t),r.c=64),r}function Ot(e,t){for(let n=0;n<t.length;n++)e.c===64&&(e.t+=e.c,c1(e,!1),e.c=0),e.b[e.c++]=t[n]}function f1(e){for(e.t+=e.c;e.c<64;)e.b[e.c++]=0;c1(e,!0);let t=new Uint8Array(e.outlen);for(let n=0;n<e.outlen;n++)t[n]=e.h[n>>2]>>8*(n&3)&255;return t}function d1(e,t,n){n=n||32,e=s1.normalizeInput(e);let r=p1(n,t);return Ot(r,e),f1(r)}function d2(e,t,n){let r=d1(e,t,n);return s1.toHex(r)}m1.exports={blake2s:d1,blake2sHex:d2,blake2sInit:p1,blake2sUpdate:Ot,blake2sFinal:f1}});var _t=xe((Z6,h1)=>{var Ue=a1(),Ce=y1();h1.exports={blake2b:Ue.blake2b,blake2bHex:Ue.blake2bHex,blake2bInit:Ue.blake2bInit,blake2bUpdate:Ue.blake2bUpdate,blake2bFinal:Ue.blake2bFinal,blake2s:Ce.blake2s,blake2sHex:Ce.blake2sHex,blake2sInit:Ce.blake2sInit,blake2sUpdate:Ce.blake2sUpdate,blake2sFinal:Ce.blake2sFinal}});function Re(e,t){if(!e)throw Error(t??"Assertion failed")}var X2=(1n<<64n)-1n;function Me(e){let t=0n,n=0n;for(let r of e)t+=BigInt(r)<<n,n+=8n;return t}var un={};for(let e=0;e<16;e++)un[e.toString(16).charCodeAt(0)]=e;var $2=new TextEncoder,G2=new Uint8Array(64);function V(e,t){if(e<0n)throw Error(`bigIntToBytes: negative numbers are not supported, got ${e}`);if(t===void 0)return cn(e);let n=Array(t);for(let r=0;r<t;r++,e>>=8n)n[r]=Number(e&0xffn);if(e>0n)throw Error(`bigIntToBytes: input does not fit in ${t} bytes`);return n}function cn(e){let t=[];for(;e>0n;e>>=8n)t.push(Number(e&0xffn));return t}function ft(e){if(e<0n)throw Error(`bigIntToBits: negative numbers are not supported, got ${e}`);let t=[];for(;e>0n;e>>=1n){let n=!!(e&1n);t.push(n)}return t}function dt(e,t,n){let r=pn(e,t);return fn(r,n)}function pn(e,t){if(t<=0n)throw Error("fromBase: base must be positive");let n=[];for(let i=t,l=1;l<e.length;i**=2n,l*=2)n.push(i);let r=n.length;e=e.concat(Array(2**r-e.length).fill(0n));for(let i=0;i<r;i++){let l=Array(e.length>>1),a=n[i];for(let s=0;s<l.length;s++)l[s]=e[2*s]+a*e[2*s+1];e=l}console.assert(e.length===1);let[o]=e;return o}function fn(e,t){if(t<=0n)throw Error("toBase: base must be positive");let n=[];for(let i=t;i<e;i**=2n)n.push(i);let r=[e],o=n.length;for(let i=0;i<o;i++){let l=Array(2*r.length),a=n[o-1-i];for(let s=0;s<r.length;s++){let f=r[s],u=f/a;l[2*s+1]=u,l[2*s]=f-u*a}r=l}for(;r[r.length-1]===0n;)r.pop();return r}function Ee(e){return typeof e=="number"&&(e=BigInt(e)),e===1n?0:(e-1n).toString(2).length}function Oe(e){return crypto.getRandomValues(new Uint8Array(e))}var _e=0x40000000000000000000000000000000224698fc094cf91b992d30ed00000001n,ze=0x40000000000000000000000000000000224698fc0994a8dd8c46eb2100000001n,dn=0x40000000000000000000000000000000224698fc094cf91b992d30edn,mn=0x40000000000000000000000000000000224698fc0994a8dd8c46eb21n,yn=0x2bce74deac30ebda362120830561f81aea322bf2b7bb7584bdad6fabd87ea32fn,hn=0x2de6a9b8746d3f589e5c4dfd492ae26e9bb97ea3c106f049a70e2c1102b6d05fn;function h(e,t){return e=e%t,e<0?e+t:e}function we(e,t,n){e=h(e,n);let r=1n;for(;t>0n;t>>=1n)t&1n&&(r=h(r*e,n)),e=h(e*e,n);return r}function mt(e,t){if(e=h(e,t),e===0n)return;let n=t,r=0n,o=1n,i=1n,l=0n;for(;e!==0n;){let a=n/e,s=h(n,e),f=r-i*a,u=o-l*a;n=e,e=s,r=i,o=l,i=f,l=u}if(n===1n)return h(r,t)}function jt(e,t,n,r,o){if(e=h(e,t),e===0n)return;let i=31,l=31,a=BigInt(i),s=(1n<<a)-1n,f=t,u=e,d=0n,c=1n,p=0;for(;p<2*n;p++){let g=1,b=0,m=0,S=1,w=Number(f&s),x=Number(u&s),D=Math.max(Ee(f),Ee(u)),ye=BigInt(Math.max(D-l,0)),q=Number(f>>ye),G=Number(u>>ye);for(let Gt=0;Gt<i;Gt++)w&1?x&1?G<=q?(q=q-G>>1,w=w-x>>1,g=g+m,b=b+S,m<<=1,S<<=1):(G=G-q>>1,x=x-w>>1,m=g+m,S=b+S,g<<=1,b<<=1):(G>>=1,x>>=1,g<<=1,b<<=1):(q>>=1,w>>=1,m<<=1,S<<=1);let ee=BigInt(g),le=BigInt(b),ae=BigInt(m),Ne=BigInt(S),Y1=f*ee-u*le,Q1=u*Ne-f*ae;f=Y1>>a,u=Q1>>a,f<0&&(f=-f,ee=-ee,le=-le),u<0&&(u=-u,ae=-ae,Ne=-Ne);let en=d*ee+c*le,tn=c*Ne+d*ae;if(d=en,c=tn,f===0n)break;if(u===0n){Re(f===1n,"u = 1"),c=h(-d,t);break}}let y=BigInt((p+1)*i);return c=h(c*o,t),c=h(c<<r-y,t),Re(h(e*c-1n,t)===0n,"mod p"),c}function gn(e,t,n,r,o){if(e===0n)return 0n;let i=we(e,n-1n>>1n,t),l=h(i*e,t);for(i=h(i*l,t);;){if(i===1n)return l;let a=0n,s=i;for(;s!==1n;)s=h(s*s,t),a=a+1n;if(a===o)return;let f=we(r,1n<<o-a-1n,t);o=a,r=h(f*f,t),i=h(i*r,t),l=h(l*f,t)}}function Yt(e,t){return e===0n?!0:we(e,(t-1n)/2n,t)===1n}function bn(e,t,n){for(;;){let r=Oe(t);r[t-1]&=n;let o=Me(r);if(o<e)return o}}var L=yt(_e,{oddFactor:dn,twoadicRoot:yn,twoadicity:32n}),te=yt(ze,{oddFactor:mn,twoadicRoot:hn,twoadicity:32n});function yt(e,t){let{oddFactor:n,twoadicRoot:r,twoadicity:o}=t??Sn(e),i=Ee(e),l=Math.ceil(i/8),s=(1<<i-8*(l-1))-1,f=31,u=Math.ceil(i/f),d=BigInt(2*u*f),c=mt(1n<<d,e);return Re(c!==void 0,"2^-kmax exists"),{modulus:e,sizeInBits:i,t:n,M:o,twoadicRoot:r,mod(p){return h(p,e)},add(p,y){return h(p+y,e)},not(p,y){return h(2n**BigInt(y)-(p+1n),e)},negate(p){return p===0n?0n:e-p},sub(p,y){return h(p-y,e)},mul(p,y){return h(p*y,e)},inverse(p){return jt(p,e,u,d,c)},div(p,y){let g=jt(y,e,u,d,c);if(g!==void 0)return h(p*g,e)},square(p){return h(p*p,e)},isSquare(p){return Yt(p,e)},sqrt(p){return gn(p,e,n,r,o)},power(p,y){return we(p,y,e)},dot(p,y){let g=0n,b=p.length;for(let m=0;m<b;m++)g+=p[m]*y[m];return h(g,e)},equal(p,y){return h(p-y,e)===0n},isEven(p){return!(p&1n)},random(){return bn(e,l,s)},fromNumber(p){return h(BigInt(p),e)},fromBigint(p){return h(p,e)},rot(p,y,g="left",b=64n){g==="right"&&(y=b-y);let m=p<<y,S=m>>b;return m&(1n<<b)-1n|S},leftShift(p,y,g=64){return p<<BigInt(y)&(1n<<BigInt(g))-1n},rightShift(p,y){return p>>BigInt(y)}}}function Sn(e){let t=e-1n,n=0n;for(;(t&1n)===0n;)t>>=1n,n++;let r=2n;for(;Yt(r,e);)r++;let o=we(r,t,e);return{oddFactor:t,twoadicRoot:o,twoadicity:n}}var kn={x:1n,y:12418654782883325593414442427049395787963493412651469444558597405572177144507n},vn={x:1n,y:11426906929455361843568202299992114520848200991084027513389447476559454104162n},xn=2942865608506852014473558576493638302197734138389222805617480874486368177743n,En=20444556541222657078399132219657928148671392403212669005631716460534733845831n,wn=8503465768106391777493614032514048814691664078728891710322960303815233784505n,An=26005156700822196841419187675678338661165322343552424574062261873906994770353n,t0=5n,n0=0n,he={x:1n,y:1n,z:0n},In={create:(e,t)=>{let{a:n,b:r}=t.spec;if(n!==0n)throw Error("GroupMap only supports a = 0");function o(s){let f=e.power(s,3n),u=e.add(f,r);if(e.isSquare(u))return{x:s,y:e.sqrt(u)}}function i(s){let{u:f,v:u,y:d}=s;return[u,e.negate(e.add(f,u)),e.add(f,e.square(d))]}function l(s){let f=e.div(s.z,s.y);if(f===void 0)throw Error(`Division undefined! ${s.z}/${s.y}`);let u=e.sub(f,t.u_over_2);return{u:t.u,v:u,y:s.y}}function a(s){let{z:f,y:u}=t.projection_point,d=e.mul(t.conic_c,s),c=e.add(e.mul(d,u),f),p=e.add(e.mul(d,s),1n),y=e.div(c,p);if(y===void 0)throw Error(`Division undefined! ${c}/${p}`);let g=e.mul(2n,y);return{z:e.sub(f,g),y:e.sub(u,e.mul(g,s))}}return{potentialXs:s=>i(l(a(s))),tryDecode:o}}},Bn={u:2n,u_over_2:1n,conic_c:3n,projection_point:{z:12196889842669319921865617096620076994180062626450149327690483414064673774441n,y:1n},spec:{a:0n,b:5n}},r0=In.create(L,Bn);function ht({x:e,y:t,z:n},r){return{x:e,y:t===0n?0n:r-t,z:n}}function Ke(e,t,n){if(e.z===0n)return t;if(t.z===0n)return e;let r=e.x,o=e.y,i=e.z,l=t.x,a=t.y,s=t.z,f=h(i*i,n),u=h(s*s,n),d=h(r*u,n),c=h(l*f,n),p=h(o*s*u,n),y=h(a*i*f,n),g=h(c-d,n);if(g===0n){if(p===y)return Je(e,n);if(h(p+y,n)===0n)return he;throw Error("projectiveAdd: invalid point")}let b=h(g*g<<2n,n),m=h(g*b,n),S=2n*(y-p),w=h(d*b,n),x=h(S*S-m-2n*w,n),D=h(S*(w-x)-2n*p*m,n),ye=h(((i+s)*(i+s)-f-u)*g,n);return{x,y:D,z:ye}}function Je(e,t){if(e.z===0n)return e;let n=e.x,r=e.y,o=e.z;if(r===0n)throw Error("projectiveDouble: unhandled case");let i=h(n*n,t),l=h(r*r,t),a=h(l*l,t),s=h(2n*((n+l)*(n+l)-i-a),t),f=3n*i,u=h(f*f,t),d=h(u-2n*s,t),c=h(f*(s-d)-8n*a,t),p=h(2n*r*o,t);return{x:d,y:c,z:p}}function Fn(e,t,n){return Ke(e,ht(t,n),n)}function i0(e,t,n){let r=typeof t=="bigint"?ft(t):t,o=he;for(let i of r)i&&(o=Ke(o,e,n)),e=Je(e,n);return o}function Qt({x:e,y:t,infinity:n}){return n?he:{x:e,y:t,z:1n}}function e0(e,t){let n=e.z;if(n===0n)return{x:0n,y:0n,infinity:!0};if(n===1n)return{x:e.x,y:e.y,infinity:!1};{let r=mt(n,t),o=h(r*r,t),i=h(e.x*o,t),l=h(e.y*r*o,t);return{x:i,y:l,infinity:!1}}}function o0(e,t,n){if((e.z===0n||t.z===0n)&&e.z!==t.z)return!1;let r=h(e.z*e.z,n),o=h(t.z*t.z,n);if(h(e.x*o-t.x*r,n)!==0n)return!1;let i=h(r*e.z,n),l=h(o*t.z,n);return h(e.y*l,n)===h(t.y*i,n)}function Tn({x:e,y:t,z:n},r,o){let i=h(h(e*e,r)*e,r),l=h(t*t,r),a=h(h(n*n,r)*n,r),s=h(a*a,r);return h(l-i-o*s,r)===0n}function Un(e,t,n){let r=i0(e,n,t);return o0(r,he,t)}function l0({name:e,modulus:t,order:n,cofactor:r,generator:o,b:i,a:l,endoBase:a,endoScalar:s}){if(l!==0n)throw Error("createCurveProjective only supports a = 0");r??(r=1n);let f=r!==1n;return{name:e,modulus:t,order:n,cofactor:r,zero:he,one:{...o,z:1n},get endoBase(){if(a===void 0)throw Error("`endoBase` for this curve was not provided.");return a},get endoScalar(){if(s===void 0)throw Error("`endoScalar` for this curve was not provided.");return s},a:l,b:i,hasCofactor:f,equal(u,d){return o0(u,d,t)},isOnCurve(u){return Tn(u,t,i)},isInSubgroup(u){return Un(u,t,n)},add(u,d){return Ke(u,d,t)},double(u){return Je(u,t)},negate(u){return ht(u,t)},sub(u,d){return Fn(u,d,t)},scale(u,d){return i0(u,d,t)},endomorphism({x:u,y:d,z:c}){if(a===void 0)throw Error("endomorphism needs `endoBase` parameter.");return{x:h(a*u,t),y:d,z:c}},toAffine(u){return e0(u,t)},fromAffine(u){return Qt(u)}}}var Z=l0({name:"Pallas",modulus:_e,order:ze,generator:kn,b:t0,a:n0,endoBase:En,endoScalar:An}),g3=l0({name:"Vesta",modulus:ze,order:_e,generator:vn,b:t0,a:n0,endoBase:xn,endoScalar:wn});var F={event:"MinaZkappEvent******",events:"MinaZkappEvents*****",sequenceEvents:"MinaZkappSeqEvents**",body:"TestnetZkappBody****",accountUpdateCons:"MinaAcctUpdateCons**",accountUpdateNode:"MinaAcctUpdateNode**",zkappMemo:"MinaZkappMemo*******",signatureMainnet:"MinaSignatureMainnet",signatureTestnet:"CodaSignature*******",zkappUri:"MinaZkappUri********",deriveTokenId:"MinaDeriveTokenId***"};var O={tokenIdKey:28,receiptChainHash:12,ledgerHash:5,epochSeed:13,stateHash:16,publicKey:203,userCommandMemo:20,privateKey:90,signature:154,transactionHash:29,signedCommandV1:19},a0={mds:[["12035446894107573964500871153637039653510326950134440362813193268448863222019","25461374787957152039031444204194007219326765802730624564074257060397341542093","27667907157110496066452777015908813333407980290333709698851344970789663080149"],["4491931056866994439025447213644536587424785196363427220456343191847333476930","14743631939509747387607291926699970421064627808101543132147270746750887019919","9448400033389617131295304336481030167723486090288313334230651810071857784477"],["10525578725509990281643336361904863911009900817790387635342941550657754064843","27437632000253211280915908546961303399777448677029255413769125486614773776695","27566319851776897085443681456689352477426926500749993803132851225169606086988"]],roundConstants:[["21155079691556475130150866428468322463125560312786319980770950159250751855431","16883442198399350202652499677723930673110172289234921799701652810789093522349","17030687036425314703519085065002231920937594822150793091243263847382891822670"],["25216718237129482752721276445368692059997901880654047883630276346421457427360","9054264347380455706540423067244764093107767235485930776517975315876127782582","26439087121446593160953570192891907825526260324480347638727375735543609856888"],["15251000790817261169639394496851831733819930596125214313084182526610855787494","10861916012597714684433535077722887124099023163589869801449218212493070551767","18597653523270601187312528478986388028263730767495975370566527202946430104139"],["15831416454198644276563319006805490049460322229057756462580029181847589006611","15171856919255965617705854914448645702014039524159471542852132430360867202292","15488495958879593647482715143904752785889816789652405888927117106448507625751"],["19039802679983063488134304670998725949842655199289961967801223969839823940152","4720101937153217036737330058775388037616286510783561045464678919473230044408","10226318327254973427513859412126640040910264416718766418164893837597674300190"],["20878756131129218406920515859235137275859844638301967889441262030146031838819","7178475685651744631172532830973371642652029385893667810726019303466125436953","1996970955918516145107673266490486752153434673064635795711751450164177339618"],["15205545916434157464929420145756897321482314798910153575340430817222504672630","25660296961552699573824264215804279051322332899472350724416657386062327210698","13842611741937412200312851417353455040950878279339067816479233688850376089318"],["1383799642177300432144836486981606294838630135265094078921115713566691160459","1135532281155277588005319334542025976079676424839948500020664227027300010929","4384117336930380014868572224801371377488688194169758696438185377724744869360"],["21725577575710270071808882335900370909424604447083353471892004026180492193649","676128913284806802699862508051022306366147359505124346651466289788974059668","25186611339598418732666781049829183886812651492845008333418424746493100589207"],["10402240124664763733060094237696964473609580414190944671778761753887884341073","11918307118590866200687906627767559273324023585642003803337447146531313172441","16895677254395661024186292503536662354181715337630376909778003268311296637301"],["23818602699032741669874498456696325705498383130221297580399035778119213224810","4285193711150023248690088154344086684336247475445482883105661485741762600154","19133204443389422404056150665863951250222934590192266371578950735825153238612"],["5515589673266504033533906836494002702866463791762187140099560583198974233395","11830435563729472715615302060564876527985621376031612798386367965451821182352","7510711479224915247011074129666445216001563200717943545636462819681638560128"],["24694843201907722940091503626731830056550128225297370217610328578733387733444","27361655066973784653563425664091383058914302579694897188019422193564924110528","21606788186194534241166833954371013788633495786419718955480491478044413102713"],["19934060063390905409309407607814787335159021816537006003398035237707924006757","8495813630060004961768092461554180468161254914257386012937942498774724649553","27524960680529762202005330464726908693944660961000958842417927307941561848461"],["15178481650950399259757805400615635703086255035073919114667254549690862896985","16164780354695672259791105197274509251141405713012804937107314962551600380870","10529167793600778056702353412758954281652843049850979705476598375597148191979"],["721141070179074082553302896292167103755384741083338957818644728290501449040","22044408985956234023934090378372374883099115753118261312473550998188148912041","27068254103241989852888872162525066148367014691482601147536314217249046186315"],["3880429241956357176819112098792744584376727450211873998699580893624868748961","17387097125522937623262508065966749501583017524609697127088211568136333655623","6256814421247770895467770393029354017922744712896100913895513234184920631289"],["2942627347777337187690939671601251987500285937340386328746818861972711408579","24031654937764287280548628128490074801809101323243546313826173430897408945397","14401457902976567713827506689641442844921449636054278900045849050301331732143"],["20170632877385406450742199836933900257692624353889848352407590794211839130727","24056496193857444725324410428861722338174099794084586764867109123681727290181","11257913009612703357266904349759250619633397075667824800196659858304604714965"],["22228158921984425749199071461510152694025757871561406897041788037116931009246","9152163378317846541430311327336774331416267016980485920222768197583559318682","13906695403538884432896105059360907560653506400343268230130536740148070289175"],["7220714562509721437034241786731185291972496952091254931195414855962344025067","27608867305903811397208862801981345878179337369367554478205559689592889691927","13288465747219756218882697408422850918209170830515545272152965967042670763153"],["8251343892709140154567051772980662609566359215743613773155065627504813327653","22035238365102171608166944627493632660244312563934708756134297161332908879090","13560937766273321037807329177749403409731524715067067740487246745322577571823"],["21652518608959234550262559135285358020552897349934571164032339186996805408040","22479086963324173427634460342145551255011746993910136574926173581069603086891","13676501958531751140966255121288182631772843001727158043704693838707387130095"],["5680310394102577950568930199056707827608275306479994663197187031893244826674","25125360450906166639190392763071557410047335755341060350879819485506243289998","22659254028501616785029594492374243581602744364859762239504348429834224676676"],["23101411405087512171421838856759448177512679869882987631073569441496722536782","24149774013240355952057123660656464942409328637280437515964899830988178868108","5782097512368226173095183217893826020351125522160843964147125728530147423065"],["13540762114500083869920564649399977644344247485313990448129838910231204868111","20421637734328811337527547703833013277831804985438407401987624070721139913982","7742664118615900772129122541139124149525273579639574972380600206383923500701"],["1109643801053963021778418773196543643970146666329661268825691230294798976318","16580663920817053843121063692728699890952505074386761779275436996241901223840","14638514680222429058240285918830106208025229459346033470787111294847121792366"],["17080385857812672649489217965285727739557573467014392822992021264701563205891","26176268111736737558502775993925696791974738793095023824029827577569530708665","4382756253392449071896813428140986330161215829425086284611219278674857536001"],["13934033814940585315406666445960471293638427404971553891617533231178815348902","27054912732979753314774418228399230433963143177662848084045249524271046173121","28916070403698593376490976676534962592542013020010643734621202484860041243391"],["24820015636966360150164458094894587765384135259446295278101998130934963922381","7969535238488580655870884015145760954416088335296905520306227531221721881868","7690547696740080985104189563436871930607055124031711216224219523236060212249"],["9712576468091272384496248353414290908377825697488757134833205246106605867289","12148698031438398980683630141370402088785182722473169207262735228500190477924","14359657643133476969781351728574842164124292705609900285041476162075031948227"],["23563839965372067275137992801035780013422228997724286060975035719045352435470","4184634822776323233231956802962638484057536837393405750680645555481330909086","16249511905185772125762038789038193114431085603985079639889795722501216492487"],["11001863048692031559800673473526311616702863826063550559568315794438941516621","4702354107983530219070178410740869035350641284373933887080161024348425080464","23751680507533064238793742311430343910720206725883441625894258483004979501613"],["28670526516158451470169873496541739545860177757793329093045522432279094518766","3568312993091537758218792253361873752799472566055209125947589819564395417072","1819755756343439646550062754332039103654718693246396323207323333948654200950"],["5372129954699791301953948907349887257752247843844511069896766784624930478273","17512156688034945920605615850550150476471921176481039715733979181538491476080","25777105342317622165159064911913148785971147228777677435200128966844208883059"],["25350392006158741749134238306326265756085455157012701586003300872637887157982","20096724945283767296886159120145376967480397366990493578897615204296873954844","8063283381910110762785892100479219642751540456251198202214433355775540036851"],["4393613870462297385565277757207010824900723217720226130342463666351557475823","9874972555132910032057499689351411450892722671352476280351715757363137891038","23590926474329902351439438151596866311245682682435235170001347511997242904868"],["17723373371137275859467518615551278584842947963894791032296774955869958211070","2350345015303336966039836492267992193191479606566494799781846958620636621159","27755207882790211140683010581856487965587066971982625511152297537534623405016"],["6584607987789185408123601849106260907671314994378225066806060862710814193906","609759108847171587253578490536519506369136135254150754300671591987320319770","28435187585965602110074342250910608316032945187476441868666714022529803033083"],["16016664911651770663938916450245705908287192964254704641717751103464322455303","17551273293154696089066968171579395800922204266630874071186322718903959339163","20414195497994754529479032467015716938594722029047207834858832838081413050198"],["19773307918850685463180290966774465805537520595602496529624568184993487593855","24598603838812162820757838364185126333280131847747737533989799467867231166980","11040972566103463398651864390163813377135738019556270484707889323659789290225"],["5189242080957784038860188184443287562488963023922086723850863987437818393811","1435203288979376557721239239445613396009633263160237764653161500252258220144","13066591163578079667911016543985168493088721636164837520689376346534152547210"],["17345901407013599418148210465150865782628422047458024807490502489711252831342","22139633362249671900128029132387275539363684188353969065288495002671733200348","1061056418502836172283188490483332922126033656372467737207927075184389487061"],["10241738906190857416046229928455551829189196941239601756375665129874835232299","27808033332417845112292408673209999320983657696373938259351951416571545364415","18820154989873674261497645724903918046694142479240549687085662625471577737140"],["7983688435214640842673294735439196010654951226956101271763849527529940619307","17067928657801807648925755556866676899145460770352731818062909643149568271566","24472070825156236829515738091791182856425635433388202153358580534810244942762"],["25752201169361795911258625731016717414310986450004737514595241038036936283227","26041505376284666160132119888949817249574689146924196064963008712979256107535","23977050489096115210391718599021827780049209314283111721864956071820102846008"],["26678257097278788410676026718736087312816016749016738933942134600725962413805","10480026985951498884090911619636977502506079971893083605102044931823547311729","21126631300593007055117122830961273871167754554670317425822083333557535463396"],["1564862894215434177641156287699106659379648851457681469848362532131406827573","13247162472821152334486419054854847522301612781818744556576865965657773174584","8673615954922496961704442777870253767001276027366984739283715623634850885984"],["2794525076937490807476666942602262298677291735723129868457629508555429470085","4656175953888995612264371467596648522808911819700660048695373348629527757049","23221574237857660318443567292601561932489621919104226163978909845174616477329"],["1878392460078272317716114458784636517603142716091316893054365153068227117145","2370412714505757731457251173604396662292063533194555369091306667486647634097","17409784861870189930766639925394191888667317762328427589153989811980152373276"],["25869136641898166514111941708608048269584233242773814014385564101168774293194","11361209360311194794795494027949518465383235799633128250259863567683341091323","14913258820718821235077379851098720071902170702113538811112331615559409988569"],["12957012022018304419868287033513141736995211906682903915897515954290678373899","17128889547450684566010972445328859295804027707361763477802050112063630550300","23329219085372232771288306767242735245018143857623151155581182779769305489903"],["1607741027962933685476527275858938699728586794398382348454736018784568853937","2611953825405141009309433982109911976923326848135736099261873796908057448476","7372230383134982628913227482618052530364724821976589156840317933676130378411"],["20203606758501212620842735123770014952499754751430660463060696990317556818571","4678361398979174017885631008335559529633853759463947250620930343087749944307","27176462634198471376002287271754121925750749676999036165457559387195124025594"],["6361981813552614697928697527332318530502852015189048838072565811230204474643","13815234633287489023151647353581705241145927054858922281829444557905946323248","10888828634279127981352133512429657747610298502219125571406085952954136470354"]],fullRounds:55,partialRounds:0,hasInitialRoundConstant:!1,stateSize:3,rate:2,power:7},s0={mds:[["5328350144166205084223774245058198666309664348635459768305312917086056785354","15214731724107930304595906373487084110291887262136882623959435918484004667388","22399519358931858664262538157042328690232277435337286643350379269028878354609"],["10086628405675314879458652402278736459294354590428582803795166650930540770072","17127968360683744052278857147989507037142007029142438136689352416106177192235","14207324749280135281015658576564097509614634975132487654324863824516044294735"],["3059104278162906687184746935153057867173086006783171716838577369156969739687","16755849208683706534025643823697988418063305979108082130624352443958404325985","16889774624482628108075965871448623911656600744832339664842346756371603433407"]],roundConstants:[["1346081094044643970582493287085428191977688221215786919106342366360741041016","10635969173348128974923358283368657934408577270968219574411363948927109531877","18431955373344919956072236142080066866861234899777299873162413437379924987003"],["5797044060651575840084283729791357462720161727701814038830889113712361837236","931288489507796144596974766082847744938192694315568692730730202141894005205","13659894470945121760517769979107966886673294523737498361566285362771110125394"],["6076231707445968054305995680347976771585015308155855387339303513025362636128","28822740034050339685362260108484262889265034407340240070058997651710236456303","23420266473857869790486107029614186913447272961845992963194006142267563993493"],["13753917374184785903125509246122783296344288469304898921025291716613575849357","22396739346703340038555577564698139382745239004673153148674304627904081092826","13064238335532551154986111986409392866270911640785653458047811526842088084911"],["23165923875642452719095776619341762858050322341374771345641255745672274104746","1876216571769482372914291210815859835162659440705283782713345335434924136736","25448252060136178247213604035267580231762596830634036926922217427938159849142"],["2161875315509206970842862195937323600322108268401381254431163181777726747153","19159855698625842998331760283165907305622417625829203038229273729196960321630","24828563875172432296791053766778475681869974948122169083176331088266823626561"],["15959479662608710141128458274961057999257961784282074767105536637788386907463","8006369581283017287449277389162056290714176164680299906116833200510117952858","18794336794618132129607701188430371953320538976527988886453665523008714542779"],["19408271715954593722501381885401160867835377473312521553027032015227895029571","13654747284005184272412579731446984220568337794941823533879059135026064413631","14094055032353750931629930778481002727722804310855727808905931659115939920989"],["13241818625838429282823260827177433104574315653706102174619924764342778921524","25709259239494174564705048436260891089407557689981668111890003079561388887725","26866626910239634723971078462134580196819809568632305020800296809092442642381"],["23886826350713085163238005260075062110062681905356997481925492650252417143049","16853602711255261520713463306790360324679500458440235992292027384928526778856","18444710386168488194610417945072711530390091945738595259171890487504771614189"],["16896789009769903615328691751424474161656500693270070895928499575572871141439","23842266984616972287898037872537536999393060934879414668030219493005225085992","24369698563802298585444760814856330583118549706483939267059237951238240608187"],["25360195173713628054110426524260405937218170863260484655473435413697869858790","1486437708678506228822038923353468635394979165769861487132708983207562337116","18653498960429911228442559598959970807723487073275324556015861725806677047150"],["18878179044241268037057256060083772636369783391816038647949347814518015576522","178715779905629247116805974152863592571182389085419970371289655361443016848","8381006794425876451998903949255801618132578446062133243427381291481465852184"],["4176946262813877719206528849579392120806054050640974718891398605746592169324","16376345520728802444699629729684297833862527190772376028981704525651968727081","8399065769082251057361366626601550736334213197703006866551331927128775757919"],["15435308585611812393531506745122614542196708285088622615406141986333182280857","4082259282787276939431186930090898350392871145699460879678141552997816391817","26348742719959309014730178326877937464605873211235784184917342950648457078699"],["9707631711734344681918469569872517425107158187591261754498805460753455298868","27910768846011709391567916011595957279088224137468948238696800459136335473132","20407239095656434708569263842372155762970847207558227886302782130015730063802"],["22726225412881182965250630589245572283256255052470345984553083359461473893802","12443967854426795490638709950679156338200426963050610832781263082981525248175","27102543658848146076219989119639465430524061997280788166887046421706499775415"],["14427224233985680214097547669945064793149553513421479297921556194475574770861","22917454832925781549840198815703114840452733537799472739275668965081704937832","3455076056123630366063931123762198941796412458154689469887583689725886013901"],["4513100023937785913596662867311227004762025658663076805918211014066645403017","18187619530784075723418065322038024507729605774832001333883311123910954334059","9447065431426150382325592560406989926365684509675374414068135115024495130938"],["3227816098015819796753427754968234889554095489076864339942014527747604603014","14798316759185072116520458171957899889489461918408669809912344751222514418582","23013904852315603905843158448056763116188801262838729536210355401378476650033"],["20979191509934291452182967564058656088941447895799901211038858159903580333267","20772973010251235271448378823573767262405703078344288856168565499702414379868","10105446427739226002497411811738001382334316505480517822035303561899927603685"],["11079074761356717003579108002319997196881121172538617046865136940931215263187","4693927775411489288330326150094711670434597808961717172753867514688725690438","18581720304902876944842830383273503265470859268712618325357902881821721540119"],["3065369948183164725765083504606321683481629263177690053939474679689088169185","18515622379147081456114962668688706121098539582467584736624699157043365677487","17563088600719312877716085528177751048248154461245613291986010180187238198006"],["26199746176994924146211004840756471702409132230831594954444947705902602287290","7576136600627345523051497639367002272003104458453478964661395239732811642605","20058687874612168338994287374025378897088936171250328231848098497610185784281"],["16894722532414195606958290526999761110785277556463400588047573469106594850228","13961730805696859614283621225672002906734926278118993580398533742874863598733","25256842011135514243352951950573936602906198374305137963222382546140030647211"],["18530360047537856737482157200091774590035773602620205695980247565433703032532","23014819965938599260086897799541446473887833964178378497976832161473586995397","27911426213258307990762460361663504655967992659180759140364181941291843542489"],["1067338118323302017358103178057182291035336430305886255160210378977812067042","17219092885519007424608854460610388434712113621163885775309496940189894433620","16432921127615937542183846559291144733339643093361323334499888895135356545408"],["28608851042959977114787048070153637607786033079364369200270218128830983558707","10121629780013165888398831090128011045011860641816380162950736555305748332191","2348036340843128746981122630521268144839343500596932561106759754644596320722"],["16619881370356823200358060093334065394764987467483650323706184068451904156452","2302436627861989749837563733434625231689351276818486757748445924305258835336","27514536540953539473280001431110316405453388911725550380123851609652679788049"],["9459277727420672604737117687200019308525004979918488827092207438664125039815","23425670740358068509956137586663046763224562225383386726193078231034380596217","7641885067011661443791509688937280323563328029517832788240965464798835873658"],["9579420382351699601929202663836555665702024548386778299996961509578687980280","18513671386572584282611234979588379470994484682444053600751415262497237017703","24923151431234706142737221165378041700050312199585085101919834422744926421604"],["21131320841803068139502705966375283830095161079635803028011171241658723560073","19208476595309656066589572658712717685014329237892885950958199953675225096566","24023185216737416080949689106968568821656545490748664446389634158498624398204"],["7510552996848634969347937904645640209946785877619890235458182993413526028718","3694415017252995094553868781762548289196990492336482360084813900937464847638","9219021070107873028263141554048987416559034633883158827414043929220388719352"],["5058327241234443421111591959922712922949620710493120384930391763032694640881","13148252221647574076185511663661016015859769210867362839817254885265598775418","15186790492457240277904880519227706403545816456632095870015828239411033220638"],["2775942914650502409705888572245750999561427024488403026572311267798009048466","6277965230841030155341171319927732572492215818164736949144854827643964384893","24144742149845235561087977558785057713814731737434473021812189457617252043745"],["25789129719327437503403457598813971826156253950521984610569937361506914183550","21500534320778995945845999974779950304491968082325255355181901574840373597824","17185359848218837018503091932245529880546896465437232425673134558221638601375"],["12253896579078110143384981818031883112606762215016553811786428215758384195713","12956658260778456372481429232709881794962204180363200699121804724437678625542","3023603786717368708677300377055384474816569333060487675635618249403832078921"],["4186492855716808019562789862833898284927736051002588766326482010810259565130","4263939782228419774639068267872291539552889472311225829898746091327730032923","24068843626280451423530509388397151179174104901782990365720205643492047328816"],["14564937827374621319716285527475223392664010281568256859627186463065876537730","28367596550218705971881480694115935470211319172596432472834880507822452927283","28712267437482356021504544448225827500268648754270274754623969882031853409874"],["4542596163006916397403529184431773692747461300288194722982487051249951403191","2530461821259252672899452671728393208543894014761816288817584587718369998371","12886393063011539390567049190923398676964700147222878509238966758839020897414"],["21593897590707514492037699253654745501762191795293908682495110982956631870528","13233005790593128135480716846773978578237145313006994631606474472023504621256","21621863098292803642478350494794106282518362577273973885587684567452726939909"],["26068620073001644720969640099644251616742620988609091568084348314770436291745","18248589586787935500122854210401321966459127818593446990365211078521058875685","21247134484403265289037859533347798468858819117600251067578809852124865474448"],["7947383127165915366383984718363902897504221803836013123394785749404572432524","22173041014621867335598230447618036223462011647696367239478182269973488867154","16773227734018849308448505860847939069870370055633571816925675705713088305139"],["10708707957340055662073314227607620808612686977606082605219160019699644826999","21249897193797038261479589555720746994050836195265348846222835266344091683000","12581195059139097540117398803363514148192715293133623516709277290477633379593"],["19779599816866992123290302397082614570282926215253589712189610064229996603178","21749216503901548676985371189807470207364320167486559936962401093285243029177","17600045923623503357380202389718735904174992978547372448837488832457719009224"],["2732872979548118117758016335601225525660858727422778256671975055129965858636","13703031005128062046175331918702218558750713240446179585947851411173844703597","28447710105386636841938034820015573492556750872924193415447818187228356409281"],["28539960355005748517007309210788803416171161412204526246799800716567376494244","21329318452221893900731030722137844458345358926323127858742388587761302609863","28135302149599894709369178097439582767613940517471323224020113411362601191873"],["24980774120400248734054527936006392540889095705961960837980443629260392758683","20339911045808632098936066397942175169549806052128535543540543556255197716643","7929293103930252545581851978492699598413941396422930641071359388697302362494"],["8911092207145893152276662096451247820054843777071569723455408545101628926203","19648860643145256523615441075182036100116634560394529500146405733687718224516","14635387208623683806428528837466762532853903031263830054986064902455379735903"],["11555212214346132926966321609673228184079851030522218543981385635403167028692","20896918157639814425520058178561910811657326967880217845710779511927814874973","4650158165912007049140499755153804318686705949436165235742106170124284287326"],["13880660273492757167295696447853232191657893303250187467329180558670697369810","8043529172463774320604378774840863923445982272478964686447801046272917236836","2134399296482715903442913099374581981696436050603410080564843555725771329441"],["27320952903412641133501507962185246982787769547770982814240701526492601978122","23417491374379751329394424924400186404791519133465537872457405970098902747611","17612427354278346772575179176139417348059847375297761006336024476146551185903"],["10710998507064742997612080847223278109404482930427999113323732519626499166548","14958094513415797513745395709487730603918953350067504982704138489305723550923","24096319595904213497633343966229498735553590589105811393277073274927955202995"],["17983724131200292654039765185049138356840415443160477259330748730019147254309","17598096800487588874709548646068838880468456205252324677357706597166777506441","27420647821110229619898200875848631488422182349567475956209153112306555222281"],["448538544835457571662601142415301047108854812427100562339376187510452313026","23494184556634922103535803143214434479598067155171780264810485708203176455201","22626342941879801989161990529511235538216563009907378573817996229389756621777"],["26128268137723417163973860961686381960826033145738852158792607959175787222856","20225791828042873305317281581105429726352058325970107209484198122707862156597","7538871133759632802857159609785118198934349221046986784429069814655215585732"],["26184554861259642274153262777073624024579929401668865520166966302070394487366","28755259264665180745537307265993667261709206143628938749669440804401623257679","11896066093033549470312328497237649508068258723531931099214795928200015717321"],["21657721599978732693249012287058163532690942515202465984736373311077240614059","9214914097169852704753116653702415951907628005986883140609006971322091003693","18710111680849814325169297240208687402588261569152088592693815711857504371037"],["6813635166770764528979084175325709935892248249948967889926276426090222296643","20546585456429436268067726231902751119458200511988152296570567167520382569278","20087466019194902429054761607398988292568594301671509779549344754172952693871"],["28185105286740691904534067831357491310995891986363455251895371651360605333143","10108348212894231193041286244259038275269464277821588425688314560368589986063","11433633215392393209829215018579238412423821563056156785641278458497271271546"],["27870881917195016999862550657996865268956893566432995492427618003637597051321","102309803677783876701097881491240456320211833502658383473112057006867019389","22844040227595875612525628393174357057929113317578127744718774517498324646590"],["18364790233947478619325319418813215212267974311771564959136180502266118026133","2480624341921718230432383518425561514824501138863702825916674641657321180841","16778939567530361665956758171503829349658551798564323167725356065198936433124"],["11947564511486966895926950599696532964589539443187518177489990556481125699966","3133187646540385483015602955087323554103587039123577645562801570574691666057","27704797101265438206569218421707753788081674727344603874614391656565567951541"],["13001484695584753475562184349533365512515447041450030471627087395341039487710","477322000667279478600757543806155989948171541982639893984064422067850617496","13913755821658634147813329813115566967428755223601185963529801459396673113438"],["16621869429023470107454028095846067937827722393398508604914831452950874033411","21755744236927410239079501831014076529931327263341620300431356747367343619046","26538666591151124505694487799121414506088199961481579132019627484065014831180"],["3066480818457008068617042549071052338581291837882909165666223566402713429090","16182268213934119294035309949459684472027705439038023775276926916166831108357","28907604876608422892474268478706783033050951245339691569015166507728369585190"],["27973960109508292680965426133498827831691369851701664449575719912259359998113","1456924360278399121996742356757866616312146358469991014696110099534285524446","8234248752911525485438611255163504976087091103090603316695312869292347668495"],["8716078950082339630026654067608811496722305720644485560320987802533380421009","19016744645809919602099479306503354923553336014593353020688463619133130053825","24379650661051444982012238084495990858827340608012118841005379796362233056432"],["2245379544097631382062919677963998259142792890502492881341386639439507471783","28788137434161061988371619554419440748189388934884757179010092973102292086583","7187000185648741287953633167647835668543536354944774631102766873251849991238"],["18319349500538500800225762827448369057030532278398270164660609327776487168142","2622932985948021877314529887962683530522545893985767148345336304947201715671","13805188629797792210337544360632964855143280581052079479249966961215582531026"],["27457600993464082637917106210690168172469473943609357897393615707457194410878","15448646156961779103834447043970817898237835202826003934642165760908058355399","9396792545729486882231669677795667529746274932273033601723318032992363022062"],["9927877141952679457141759789181418464292082444806533413864151258248124544859","23827901395971835838179844085051957393677906360196119690926757794561937573142","3273544693673216914876067527455588276979859627093391584406340272737391174619"],["19571510438350300564152393820251652609646082150148656806391655428002614034315","4458840243585913642400750597703353770666314833058197517675446022682775625834","6452218213610300363069953741424106105609715382419342511693148495219793324457"],["14558167930891460678441266912176752652821641543245953113671886345167213541771","10650967986920075561478528461783351160938460620955779955379459848889204404950","19990009778942542934049216419052172134625404062770188357110708518621145688588"],["26855242974447190235826233682457047761532515293146087151296725996543442567035","22785340043356532865086769889360674409753343398766563441587096485751538658065","28603049427449348335651629195385434188071937908693764500052489540779792538285"],["20545812864989828913452616721240947168977365844984763819184465128164378967167","23234068381345797209897730226956922073109641728569353961504167817770340037954","26031714567641615877877111172701145299483019910006153132858512509897185854695"],["9512221744061419790435674197238913998387834650389922233458121639503195504983","12587458000103271975978240683793268604398305885278203470492658961734100340536","9670291694005369437277651504604785512303147991710650505302465204429311229197"],["26995526763045548800439747262386290359229145489609341602564040676717570935439","23742712112104280264401317024221734961713400615669958343926511931219510484675","27931469778579449247589315744656633392873808631802461175539563849884447358271"],["20669006894143187877081688942720159738269397552445286314270368345994751825389","26891772301075275370472640177651637211280740381619976926886106618375467277414","28387986011980449959047232529988203397251084614417760995257355718700961696092"],["6579105010484741592730389416372694666279917604793318157514380025250233913402","11007035767869292700964744408562802781669930023548892567535397874932420229930","981148366863906885900456473323410468923514528856216824044152942069412627408"],["22213671088722307302576907504985884923571642958053627659840326928319445671280","1318836216310789598614608105109389429335273432455224127576823891011367206122","25586582796990779718352441955439394949194222626688223867952982491529809559257"],["4923739488579452777913681531125585976446366144127161879759262506690369040090","23505612338866210737103599484620591026802005128655081877133994175016351514827","323887003859465324514901860965142186539600668250760639664361851354147799637"],["10198923064967306784017949469108033682156920551672348936591491217255268794658","9593680688139131432883442351722730169325112619984238956948153423155998917175","27027988263960602112273050725720071355535922812577299127302015348825197871870"],["14419883951157390867695097127684346981136020111885301573583640959136319507752","5104414988075833278683649298543440897371415916271358703850262680431809374355","24739655595299332818980677669648719986462429574612913501586844601377825836782"],["28522818684103966731129743408029731246564480741348128436668680764518115102581","21520350704208288978690888796633940487888044365108767319141211249242880355961","17391005598311948834360476853940353239444383292422171321575043660157438608537"],["15367833944125677011173327826570204350687925236257190051755087781855930646142","21715073802090413714601069529558707101797361591183718695054701329871284436172","8994093285353831008525761670339342200997965950202092028313103110478252647618"],["8370824693889782161629525898408725452177580012023459750897244954935682978671","16123253540853556024347150096993154278773652905830608614979368087152152043083","3535380953353495025888433493640531836449699255364366295870140701379497967423"],["6954518484798178646508803478426114267143074508396663899281411171704702743829","28903134801897070276701950388422104654018369750191967384271618837091859516942","20872505363530172448468374920196608937030884647150175861507911076568784054834"],["6902861581703501105786795670676641959401710346423594578401934671029571262513","10124161387604183369443890585742198433184078889862870469507328332805848271064","10488004060799269337071647841224034919633445750252076195310163972966405029030"],["507704911991278613147490289466075160618843900088471236546244459176211783848","7252739745607302667257774481690407709040936359589867974787811552896597703097","23278073497974004442836030100920157527910770509761505828038443336325476654930"],["22766285055433137793164317120096790621982728188995759745859222009100808389090","23129058299483468195787339200845749049960038336751758017949899311636830205152","16665333681978951552434356320651834889869437822496200946959897681307959400425"],["12145699202182574939376505075528461451757079041659894988784442097333218352048","26340666275844437932755852805027863696219004039301187587209926587657008948704","19208771804191839410002226941825269105677187954811130189835856228258013753206"],["21957102494792377508237608216278079874536155315851198461024084071231867104453","6933367436450995525851693784691226222726503560893470094614235356287049091852","15707767379191450768747057313641112321773921923533732633534831270357733757271"],["27661963645951389261638591385668507557739541354225916772550248746235106571003","19699458096897937575096494582288688995241392471402204995195057374756282223421","902873385171181344315871113842580653512118892800584003934454469411716098791"],["17184835876565576154014372215369798779520343573944211203710896053325717110660","664657295519303589036289440053175741110032988007278988577620229144220576240","10803972669668998371638869508774217165881281885838503958226056357738500321396"],["2329846733754251453632375727999372856194157027336139087170310553870624325301","14139944357035048486675740400655356660678187875721949218090128899571575479791","18368148273419807418427674359327442879484531833435081951870369910704734685351"],["10480273665080572189328459165704340191901489646067580012574464138528963201459","21773636700078124500346009061678153597323236568110076029811348966753228682835","18184268307211429260956076021417309535471438696101133218049142374847151474905"],["25957533025669311312382992376854735734491934602484112256289764602447226406852","22223261506176684934865714490719116745135417403915426392159449667435294570739","22937309162832499167063076416585504361695925730111272512450449042837586253575"],["16956181785481598286719868503945127919581091625126206673934113115358441284347","8497782777197814773596870810881707148695901557289856910220737358078100998191","21135503731586600979470064722475007625236017670426339278983640892218291297054"],["17809297343844488723046665739910571149089769215421130894378638450427880983923","72435395972188389387093550708873189001876361107443937983754878061522372356","7511239878692099209014947248389283109997289411550315391143819429585903287870"]],fullRounds:63,partialRounds:0,hasInitialRoundConstant:!0,stateSize:3,rate:2,power:5},ge={dummyVerificationKeyHash:"3392518251768960475377392625298437850623664973002200885669375116181514017494"};function u0(e,t){if(!Number.isInteger(e)||e<0)throw Error(t)}function Le(e,t){if(!Number.isInteger(e)||e<=0)throw Error(t)}function J({toBytes:e,readBytes:t}){let n=(r,o)=>{if(u0(o,"readBytes: offset must be integer >= 0"),o>=r.length)throw Error("readBytes: offset must be within bytes length");let[i,l]=t(r,o);if(l<o)throw Error("offset returned by readBytes must be greater than initial offset");if(l>r.length)throw Error("offset returned by readBytes must not exceed bytes length");return[i,l]};return{toBytes:e,readBytes:n,fromBytes(r){let[o,i]=n(r,0);if(i<r.length)throw Error("fromBytes: input bytes left over");return o}}}function W(e,t){return J({toBytes(n){let r=e.toBytes(n);return r.unshift(t),r},readBytes(n,r){let o=n[r++];if(o!==t)throw Error(`fromBytes: Invalid version byte. Expected ${t}, got ${o}.`);return e.readBytes(n,r)}})}function p0({toBytes:e,readBytes:t},n){return J({toBytes:e,readBytes(r,o){let[i,l]=t(r,o);return n(i),[i,l]}})}function P(e,t){let n=t.map(o=>e[o]),r=Cn(n);return J({toBytes(o){let i=t.map(l=>o[l]);return r.toBytes(i)},readBytes(o,i){let[l,a]=r.readBytes(o,i);return[Object.fromEntries(t.map((f,u)=>[f,l[u]])),a]}})}function Cn(e){let t=e.length;return J({toBytes(n){let r=[];for(let o=0;o<t;o++){let i=e[o].toBytes(n[o]);r.push(...i)}return r},readBytes(n,r){let o=[];for(let i=0;i<t;i++){let[l,a]=e[i].readBytes(n,r);r=a,o.push(l)}return[o,r]}})}function be(e){let t=Object.fromEntries(e.map(({type:n},r)=>[n,r]));return J({toBytes(n){let r=t[n.type],o=e[r];if("value"in o){let i=o.value;return[r,...i.toBytes(n.value)]}return[r]},readBytes(n,r){let o=n[r];r++;let i=e[o];if("value"in i){let[l,a]=i.value.readBytes(n,r);return[{type:i.type,value:l},a]}return[{type:i.type},r]}})}var kt=J({toBytes(e){return[ue(e),...X(e)]},readBytes(e,t){let n=e[t++],r=t+n;return[Xe(e.slice(t,r)),r]}}),c0=255,gt=254,bt=253,St=252;function vt(e){let t=1n<<BigInt(e-1),n=e>>3;if(n*8!==e)throw Error("bits must be evenly divisible by 8");return J({toBytes(r){if(r<-t||r>=t)throw Error(`int${e} out of range, got ${r}`);if(r>=0)return r<0x80n?V(r,1):r<0x8000n?[gt,...V(r,2)]:r<2147483648?[bt,...V(r,4)]:[St,...V(r,8)];{let o=1n<<64n;return r>=-0x80n?[c0,...V(o+r&0xffn,1)]:r>=-0x8000n?[gt,...V(o+r&0xffffn,2)]:r>=-2147483648?[bt,...V(o+r&0xffffffffn,4)]:[St,...V(o+r,8)]}},readBytes(r,o){let i=r[o++];if(i<128)return[BigInt(i),o];let l={[c0]:1,[gt]:2,[bt]:4,[St]:8}[i];if(l===void 0)throw Error("binable integer: invalid start byte");let a=o+l,s=Pn(r.slice(o,a),n);if(s>=t&&(s-=2n*t),s<-t||s>=t)throw Error(`int${e} out of range, got ${s}`);return[s,a]}})}function Pn(e,t){let n=e.length,o=e[n-1]>>7===1?255:0,i=e.concat(Array(t-n).fill(o));return Me(i)}function f0(e){let t=vt(e),n=1n<<BigInt(e-1);return Hn(t,{to(r){if(r<0n||r>=2n*n)throw Error(`uint${e} out of range, got ${r}`);return r>=n?r-2n*n:r},from(r){let o=r<0n?r+2n*n:r;if(o<0n||o>=2n*n)throw Error(`uint${e} out of range, got ${o}`);return o}})}var E3=vt(64),w3=vt(32),De=f0(64),qe=f0(32);function Se(e,t){let n=e.sizeInBytes;if(t.length>=n)throw Error("prefix too long");let r=X(t);return e.fromBytes(r.concat(Array(n-r.length).fill(0)))}function Ve([...e]){let t=[];for(;e.length>0;){let n=e.splice(0,8),r=0;for(let o=0;o<8;o++)n[o]&&(r|=1<<o);t.push(r)}return t}function se(e){return e.map(t=>{let n=Array(8);for(let r=0;r<8;r++)n[r]=!!(t&1),t>>=1;return n}).flat()}function Ze(e,t){return{...e,toBits(n){return se(e.toBytes(n)).slice(0,t)},fromBits(n){return e.fromBytes(Ve(n))},sizeInBytes:Math.ceil(t/8),sizeInBits:t}}function Hn(e,{to:t,from:n}){return J({toBytes(r){return e.toBytes(t(r))},readBytes(r,o){let[i,l]=e.readBytes(r,o);return[n(i),l]}})}var d0=new TextEncoder,Nn=new TextDecoder;function X(e){return[...d0.encode(e)]}function Xe(e){return Nn.decode(Uint8Array.from(e))}function ue(e){return d0.encode(e).length}var xt=pt(m0(),1);var y0="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz".split(""),h0={};y0.forEach((e,t)=>{h0[e]=t});function Rn(e,t){let n=[t,...e],r=g0(n),o=n.concat(r);return On(o)}function Mn(e,t){let n=_n(e),r=n.slice(-4),o=n.slice(0,-4),i=g0(o);if(!Dn(r,i))throw Error("fromBase58Check: invalid checksum");if(o[0]!==t)throw Error(`fromBase58Check: input version byte ${t} does not match encoded version byte ${o[0]}`);return o.slice(1)}function On(e){let t=0;for(;e[t]===0;)t++;let n=[...e].map(BigInt).reverse(),r=dt(n,256n,58n).reverse();return r=Array(t).fill(0n).concat(r),r.map(o=>y0[Number(o)]).join("")}function _n(e){let t=[...e].map(o=>{let i=h0[o];if(i===void 0)throw Error("fromBase58: invalid character");return BigInt(i)}),n=0;for(;t[n]===0n;)n++;let r=dt(t.reverse(),58n,256n).reverse();return r=Array(n).fill(0n).concat(r),r.map(Number)}function g0(e){let t=xt.sha256.create();t.update(e);let n=xt.sha256.create();return n.update(t.array()),n.array().slice(0,4)}function j(e,t){return{toBase58(n){let r=e.toBytes(n);return Rn(r,t)},fromBase58(n){let r=Mn(n,t);return e.fromBytes(r)}}}function $e(e,t){return{...e,...j(e,t)}}function Ae(e,t,n){let r=n!==void 0?W(e,n):e;return j(r,t)}var zn=1,Kn=1,Jn=1,Ln=1;function b0(e){let t=Ae(e,O.tokenIdKey),n=Ae(e,O.receiptChainHash,zn),r=Ae(e,O.ledgerHash,Kn),o=Ae(e,O.epochSeed,Jn),i=Ae(e,O.stateHash,Ln);return{TokenId:t,ReceiptChainHash:n,LedgerHash:r,EpochSeed:o,StateHash:i}}function Dn(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function Ge(){let e=new Set(["object","function"]),t=new Set([Number,String,Boolean,BigInt,null,void 0]),n=Et();function r(i,l){let a=typeof i=="object"&&i!==null?Object.keys(i):[];if(!t.has(i)&&!e.has(typeof i))throw Error(`provable: unsupported type "${i}"`);function s(m){if(t.has(m))return 0;if(!e.has(typeof m))throw Error(`provable: unsupported type "${m}"`);return Array.isArray(m)?m.map(s).reduce((S,w)=>S+w,0):"sizeInFields"in m?m.sizeInFields():Object.values(m).map(s).reduce((S,w)=>S+w,0)}function f(m,S,w=!1){if(t.has(m))return[];if(!e.has(typeof m))throw Error(`provable: unsupported type "${m}"`);return Array.isArray(m)?m.map((x,D)=>f(x,S[D])).flat():"toFields"in m?m.toFields(S):(w?a:Object.keys(m)).map(x=>f(m[x],S[x])).flat()}function u(m,S,w=!1){if(m===Number)return[S??0];if(m===String)return[S??""];if(m===Boolean)return[S??!1];if(m===BigInt)return[S??0n];if(m==null)return[];if(!e.has(typeof m))throw Error(`provable: unsupported type "${m}"`);return Array.isArray(m)?m.map((x,D)=>u(x,S?.[D])):"toAuxiliary"in m?m.toAuxiliary(S):(w?a:Object.keys(m)).map(x=>u(m[x],S?.[x]))}function d(m,S,w=[],x=!1){if(m===Number||m===String||m===Boolean||m===BigInt)return w[0];if(m==null)return m;if(!e.has(typeof m))throw Error(`provable: unsupported type "${m}"`);if(Array.isArray(m)){let q=[],G=0,ee=0;for(let le of m){let ae=s(le);q.push(d(le,S.slice(ee,ee+ae),w[G])),ee+=ae,G++}return q}if("fromFields"in m)return m.fromFields(S,w);let D=x?a:Object.keys(m),ye=d(D.map(q=>m[q]),S,w);return Object.fromEntries(D.map((q,G)=>[q,ye[G]]))}function c(m,S,w=!1){if(!t.has(m)){if(!e.has(typeof m))throw Error(`provable: unsupported type "${m}"`);return Array.isArray(m)?m.forEach((x,D)=>c(x,S[D])):"check"in m?m.check(S):(w?a:Object.keys(m)).forEach(x=>c(m[x],S[x]))}}let{empty:p,fromJSON:y,toJSON:g,toInput:b}=o(i);return l?.isPure===!0?{sizeInFields:()=>s(i),toFields:m=>f(i,m,!0),toAuxiliary:()=>[],fromFields:m=>d(i,m,[],!0),toInput:m=>b(m),toJSON:m=>g(m),fromJSON:m=>y(m),check:m=>c(i,m,!0),empty:()=>p()}:{sizeInFields:()=>s(i),toFields:m=>f(i,m,!0),toAuxiliary:m=>u(i,m,!0),fromFields:(m,S)=>d(i,m,S,!0),toInput:m=>b(m),toJSON:m=>g(m),fromJSON:m=>y(m),check:m=>c(i,m,!0),empty:()=>p()}}function o(i){let l=typeof i=="object"&&i!==null?Object.keys(i):[],a=new Set([Number,String,Boolean,BigInt,null,void 0]);if(!a.has(i)&&!e.has(typeof i))throw Error(`provable: unsupported type "${i}"`);function s(c,p,y=!1){if(a.has(c))return{};if(!e.has(typeof c))throw Error(`provable: unsupported type "${c}"`);return Array.isArray(c)?c.map((g,b)=>s(g,p[b])).reduce(n.append,n.empty):"toInput"in c?c.toInput(p):"toFields"in c?{fields:c.toFields(p)}:(y?l:Object.keys(c)).map(g=>s(c[g],p[g])).reduce(n.append,n.empty)}function f(c,p,y=!1){if(c===BigInt)return p.toString();if(c===String||c===Number||c===Boolean)return p;if(c==null)return null;if(!e.has(typeof c))throw Error(`provable: unsupported type "${c}"`);return Array.isArray(c)?c.map((g,b)=>f(g,p[b])):"toJSON"in c?c.toJSON(p):Object.fromEntries((y?l:Object.keys(c)).map(g=>[g,f(c[g],p[g])]))}function u(c,p,y=!1){if(c===BigInt)return BigInt(p);if(c===String||c===Number||c===Boolean)return p;if(c==null)return;if(!e.has(typeof c))throw Error(`provable: unsupported type "${c}"`);if(Array.isArray(c))return c.map((m,S)=>u(m,p[S]));if("fromJSON"in c)return c.fromJSON(p);let g=y?l:Object.keys(c),b=u(g.map(m=>c[m]),g.map(m=>p[m]));return Object.fromEntries(g.map((m,S)=>[m,b[S]]))}function d(c){if(c===Number)return 0;if(c===String)return"";if(c===Boolean)return!1;if(c===BigInt)return 0n;if(c==null)return c;if(!e.has(typeof c))throw Error(`provable: unsupported type "${c}"`);return Array.isArray(c)?c.map(d):"empty"in c?c.empty():Object.fromEntries(Object.keys(c).map(p=>[p,d(c[p])]))}return{toInput:c=>s(i,c,!0),toJSON:c=>f(i,c,!0),fromJSON:c=>u(i,c,!0),empty:()=>d(i)}}return{provable:r,signable:o}}function Et(){return{get empty(){return{}},append(e,t){return{fields:(e.fields??[]).concat(t.fields??[]),packed:(e.packed??[]).concat(t.packed??[])}}}}var{signable:wt}=Ge();function ce(e){return{toInput(t){return{fields:[t],packed:[]}},toJSON(t){return t.toString()},fromJSON(t){if(isNaN(t)||isNaN(parseFloat(t)))throw Error(`fromJSON: expected a numeric string, got "${t}"`);let n=BigInt(t);return e(n),n},empty(){return 0n}}}function pe(e,t){let n=Math.ceil(e/8);return Ze(J({toBytes(r){return V(r,n)},readBytes(r,o){let i=0n,l=0n,a=Math.min(o+n,r.length);for(let s=o;s<a;s++)i+=BigInt(r[s])<<l,l+=8n;return t(i),[i,a]}}),e)}var k0=L.sizeInBits,v0=0x40000000000000000000000000000000224698fc094cf91b992d30ed00000000n,S0=je(0n,L.modulus,"Field"),We=E0(new Set([0n,1n]),"Bool"),At=E0(new Set([1n,v0]),"Sign"),k=ke(function(t){return h(BigInt(t),L.modulus)},{...ce(S0),...pe(L.sizeInBits,S0),...L}),R=ke(function(t){return BigInt(t)},{...ce(We),...pe(1,We),toInput(e){return{fields:[],packed:[[e,1]]}},toBoolean(e){return!!e},toJSON(e){return!!e},fromJSON(e){let t=BigInt(e);return We(t),t},sizeInBytes:1,fromField(e){return We(e),e}});function x0(e){let t=(1n<<BigInt(e))-1n,n=je(0n,1n<<BigInt(e),`UInt${e}`),r=pe(e,n),o=Math.ceil(e/8);return ke(function(l){let a=BigInt(l);return n(a),a},{...ce(n),...r,toInput(i){return{fields:[],packed:[[i,e]]}},maxValue:t,random(){return r.fromBytes([...Oe(o)])}})}var $=x0(32),Y=x0(64),Ie=ke(function(t){if(t!==1&&t!==-1)throw Error("Sign: input must be 1 or -1.");return h(BigInt(t),L.modulus)},{...ce(At),...pe(1,At),empty(){return 1n},toInput(e){return{fields:[],packed:[[e===1n?1n:0n,1]]}},fromFields([e]){return e===0n?1n:(At(e),e)},toJSON(e){return e===1n?"Positive":"Negative"},fromJSON(e){if(e!=="Positive"&&e!=="Negative")throw Error("Sign: invalid input");return e==="Positive"?1n:v0}});function ke(e,t){return Object.assign(e,t)}function je(e,t,n){return r=>{if(r<e)throw Error(`${n}: inputs smaller than ${e} are not allowed, got ${r}`);if(r>=t)throw Error(`${n}: inputs larger than ${t-1n} are not allowed, got ${r}`)}}function E0(e,t){return n=>{if(!e.has(n))throw Error(`${t}: input must be one of ${[...e].join(", ")}, got ${n}`)}}var Be={field:1,scalar:1,publicKey:1,signature:1},I={toProjective({x:e,y:t}){return Z.fromAffine({x:e,y:t,infinity:!1})},fromProjective(e){let{x:t,y:n,infinity:r}=Z.toAffine(e);if(r)throw Error("Group.fromProjective: point is infinity");return{x:t,y:n}},get generatorMina(){return I.fromProjective(Z.one)},scale(e,t){return I.fromProjective(Z.scale(I.toProjective(e),t))},b:Z.b,toFields({x:e,y:t}){return[e,t]}},qn=W(k,Be.field),Vn=W(p0(P({x:qn,isOdd:R},["x","isOdd"]),({x:e})=>{let{mul:t,add:n}=k,r=n(t(e,t(e,e)),Z.b);if(!k.isSquare(r))throw Error("PublicKey: not a valid group element")}),Be.publicKey),v={...wt({x:k,isOdd:R}),...$e(Vn,O.publicKey),toJSON(e){return v.toBase58(e)},fromJSON(e){return v.fromBase58(e)},toGroup({x:e,isOdd:t}){let{mul:n,add:r}=k,o=r(n(e,n(e,e)),Z.b),i=k.sqrt(o);if(i===void 0)throw Error("PublicKey.toGroup: not a valid group element");return t!==(i&1n)&&(i=k.negate(i)),{x:e,y:i}},fromGroup({x:e,y:t}){let n=t&1n;return{x:e,isOdd:n}},equal(e,t){return e.x===t.x&&e.isOdd===t.isOdd},toInputLegacy({x:e,isOdd:t}){return{fields:[e],bits:[!!t]}}},w0=je(0n,te.modulus,"Scalar"),B=ke(function(t){return h(BigInt(t),te.modulus)},{...ce(w0),...pe(te.sizeInBits,w0),...te}),A0=W(B,Be.scalar),Zn=j(A0,O.privateKey),T={...B,...wt(B),...Zn,...A0,toPublicKey(e){return v.fromGroup(I.scale(I.generatorMina,e))}};function Ye(e){return e.hasOwnProperty("to")&&e.hasOwnProperty("from")&&e.hasOwnProperty("fee")&&e.hasOwnProperty("nonce")}function I0(e){return e.hasOwnProperty("zkappCommand")&&e.hasOwnProperty("feePayer")}function B0(e){return Ye(e)&&e.hasOwnProperty("amount")}function F0(e){return Ye(e)&&!e.hasOwnProperty("amount")}function It(e){return typeof e=="object"&&"field"in e&&"scalar"in e}function T0(e){return e.data.hasOwnProperty("zkappCommand")&&e.data.hasOwnProperty("feePayer")&&typeof e.signature=="string"}function U0(e){return Ye(e.data)&&It(e.signature)&&e.data.hasOwnProperty("amount")}function C0(e){return Ye(e.data)&&It(e.signature)&&!e.data.hasOwnProperty("amount")}function P0(e){return typeof e.data=="string"&&It(e.signature)}function H0({Field:e,Poseidon:t}){function n(){return[e(0),e(0),e(0)]}function r(u){return t.update(n(),[Se(e,u)])}function o(u,d){let c=r(u);return t.update(c,d)[0]}function i(u){return r(u)[0]}let l={empty(){return{hash:i("MinaZkappEventsEmpty"),data:[]}},pushEvent(u,d){let c=o(F.event,d);return{hash:o(F.events,[u.hash,c]),data:[d,...u.data]}},fromList(u){return[...u].reverse().reduce(l.pushEvent,l.empty())},hash(u){return l.fromList(u).hash}},a={...l,...Qe({empty:l.empty,toJSON(u){return u.map(d=>d.map(c=>e.toJSON(c)))},fromJSON(u){let d=u.map(p=>p.map(y=>e.fromJSON(y))),c=l.hash(d);return{data:d,hash:c}}})},s={empty(){return{hash:i("MinaZkappActionsEmpty"),data:[]}},pushEvent(u,d){let c=o(F.event,d);return{hash:o(F.sequenceEvents,[u.hash,c]),data:[d,...u.data]}},fromList(u){return[...u].reverse().reduce(s.pushEvent,s.empty())},hash(u){return this.fromList(u).hash},emptyActionState(){return i("MinaZkappActionStateEmptyElt")},updateSequenceState(u,d){return o(F.sequenceEvents,[u,d])}},f={...s,...Qe({empty:s.empty,toJSON(u){return u.map(d=>d.map(c=>e.toJSON(c)))},fromJSON(u){let d=u.map(p=>p.map(y=>e.fromJSON(y))),c=s.hash(d);return{data:d,hash:c}}})};return{Events:a,Actions:f}}function Qe({empty:e,toJSON:t,fromJSON:n}){return{empty:e,sizeInFields(){return 1},toFields({hash:r}){return[r]},toAuxiliary(r){return[r?.data??e().data]},fromFields([r],[o]){return{data:o,hash:r}},toJSON({data:r}){return t(r)},fromJSON(r){return n(r)},check(){},toInput({hash:r}){return{fields:[r]}}}}var Xn=6;function R0({Field:e,Bool:t,HashHelpers:n,packToFields:r}){let{signable:o}=Ge(),i=b0(e),l=o(e);return{TokenId:N0(l,i.TokenId,e($n)),StateHash:N0(l,i.StateHash),TokenSymbol:Gn(o({field:e,symbol:String}),e),AuthRequired:Wn(o({constant:t,signatureNecessary:t,signatureSufficient:t}),t),ZkappUri:jn(e,n,r)}}var $n=1;function N0(e,t,n){return{...e,empty:n!==void 0?()=>n:e.empty,toJSON(r){return t.toBase58(r)},fromJSON(r){return t.fromBase58(r)}}}function Gn(e,t){return{...e,toInput({field:n}){return{packed:[[n,48]]}},toJSON({symbol:n}){return n},fromJSON(n){let r=ue(n);if(r>Xn)throw Error(`Token symbol ${n} should be a maximum of 6 bytes, but is ${r}`);return{symbol:n,field:Se(t,n)}}}}function Wn(e,t){return{...e,empty(){return{constant:t(!0),signatureNecessary:t(!1),signatureSufficient:t(!0)}},toJSON(n){let r=Number(t.toJSON(n.constant)),o=Number(t.toJSON(n.signatureNecessary)),i=Number(t.toJSON(n.signatureSufficient));switch(`${r}${o}${i}`){case"110":return"Impossible";case"101":return"None";case"000":return"Proof";case"011":return"Signature";case"001":return"Either";default:throw Error("Unexpected permission")}},fromJSON(n){let o={Impossible:"110",None:"101",Proof:"000",Signature:"011",Either:"001"}[n];if(o===void 0)throw Error("Unexpected permission");let[i,l,a]=o.split("").map(s=>t(!!Number(s)));return{constant:i,signatureNecessary:l,signatureSufficient:a}}}}function jn(e,t,n){function r(o){let i=se(X(o));i.push(!0);let l={packed:i.map(s=>[e(Number(s)),1])},a=n(l);return t.hashWithPrefix(F.zkappUri,a)}return Qe({empty(){return{data:"",hash:t.hashWithPrefix(F.zkappUri,[e(0),e(0)])}},toJSON(o){return o},fromJSON(o){return{data:o,hash:r(o)}}})}function Yn(e){let{potentialXs:t,tryDecode:n}=r0;return t(e).map(o=>n(o)).find(o=>o)}function Qn(e){return t=>{let n=e(t),r=Yn(n);if(r===void 0)return;let o=r.y%2n===0n,i=L.negate(r.y);return{x:r.x,y:{x0:o?r.y:i,x1:o?i:r.y}}}}var M0=_0(L,a0),fe={...M0,hashToGroup:Qn(M0.hash)},O0=_0(L,s0);function _0(e,{fullRounds:t,partialRounds:n,hasInitialRoundConstant:r,stateSize:o,rate:i,power:l,roundConstants:a,mds:s}){if(n!==0)throw Error("we don't support partial rounds");Le(i,"rate must be a positive integer"),Le(t,"fullRounds must be a positive integer"),Le(l,"power must be a positive integer");let f=BigInt(l),u=a.map(b=>b.map(BigInt)),d=s.map(b=>b.map(BigInt));function c(){return Array(o).fill(0n)}function p(b){return y(c(),b)[0]}function y([...b],m){if(m.length===0)return g(b),b;let S=Math.ceil(m.length/i)*i;m=m.concat(Array(S-m.length).fill(0n));for(let w=0;w<S;w+=i){for(let x=0;x<i;x++)b[x]=e.add(b[x],m[w+x]);g(b)}return b}function g(b){let m=0;if(r){for(let S=0;S<o;S++)b[S]=e.add(b[S],u[0][S]);m=1}for(let S=0;S<t;S++){for(let x=0;x<o;x++)b[x]=e.power(b[x],f);let w=[...b];for(let x=0;x<o;x++)b[x]=e.dot(d[x],w),b[x]=e.add(b[x],u[S+m][x])}}return{initialState:c,update:y,hash:p}}function Bt(e,t){function n(i){return t.update(t.initialState(),[Se(e,i)])}function r(i){return n(i)[0]}function o(i,l){let a=n(i);return t.update(a,l)[0]}return{salt:n,emptyHashWithPrefix:r,hashWithPrefix:o}}var Ft=Et(),et=Bt(k,fe),{hashWithPrefix:Q}=et,z0=Bt(k,O0);function de({fields:e=[],packed:t=[]}){if(t.length===0)return e;let n=[],r=0n,o=0;for(let[i,l]of t)o+=l,o<255?r=r*(1n<<BigInt(l))+i:(n.push(r),o=l,r=i);return n.push(r),e.concat(n)}function tt({fields:e,bits:t}){let n=[];for(;t.length>0;){let r=t.splice(0,k0-1),o=k.fromBits(r);n.push(o)}return e.concat(n)}function K0({fields:e,bits:t}){return e.map(k.toBits).flat().concat(t)}var C={empty(){return{fields:[],bits:[]}},bits(e){return{fields:[],bits:e}},append(e,t){return{fields:(e.fields??[]).concat(t.fields??[]),bits:(e.bits??[]).concat(t.bits??[])}}};var{TokenId:J0,StateHash:L0,TokenSymbol:D0,AuthRequired:q0,ZkappUri:V0}=R0({Field:k,Bool:R,HashHelpers:et,packToFields:de}),{Events:Z0,Actions:Tt}=H0({Field:k,Poseidon:fe}),X0={...k,empty:Tt.emptyActionState},$0={...k,empty:()=>k(ge.dummyVerificationKeyHash)},G0={...k,empty:()=>et.emptyHashWithPrefix("CodaReceiptEmpty")};var nt={sizeInFields:()=>0,toFields:()=>[],toAuxiliary:()=>[],fromFields:()=>null,check:()=>{},toInput:()=>({}),toJSON:()=>null,fromJSON:()=>null,empty:()=>null},E6={...nt,fromFields:()=>{},toJSON:()=>null,fromJSON:()=>{},empty:()=>{}},Ut=new Set(["number","string","null"]);var Ct={number:{...nt,toAuxiliary:(e=0)=>[e],toJSON:e=>e,fromJSON:e=>e,fromFields:(e,[t])=>t,empty:()=>0},string:{...nt,toAuxiliary:(e="")=>[e],toJSON:e=>e,fromJSON:e=>e,fromFields:(e,[t])=>t,empty:()=>""},null:nt};function W0(e,t){let n=e.Field;function r(u,d,c){return Fe(e,t,u,d,c)}function o(u){return{toJSON(d){return i(u,d)},fromJSON(d){return l(u,d)},toInput(d){return s(u,d)},empty(){return a(u)}}}function i(u,d){return r({map(c,p){return c.toJSON(p)},reduceArray(c){return c},reduceObject(c,p){return p},reduceFlaggedOption({isSome:c,value:p}){return c?p:null},reduceOrUndefined(c){return c??null}},u,d)}function l(u,d){let{checkedTypeName:c}=u;if(c)return t[c].fromJSON(d);if(u.type==="array"){let p=u;return d.map(y=>l(p.inner,y))}if(u.type==="option"){let p=u;switch(p.optionType){case"closedInterval":case"flaggedOption":{let y=e.Bool.fromJSON(d!==null),g;if(d!==null)g=l(p.inner,d);else if(g=a(p.inner),p.optionType==="closedInterval"){let b=p.inner.entries.lower,m=e[b.type];g.lower=m.fromJSON(p.rangeMin),g.upper=m.fromJSON(p.rangeMax)}return{isSome:y,value:g}}case"orUndefined":return d===null?void 0:l(p.inner,d);default:throw Error("bug")}}if(u.type==="object"){let{keys:p,entries:y}=u,g={};for(let b=0;b<p.length;b++){let m=y[p[b]];g[p[b]]=l(m,d[p[b]])}return g}return Ut.has(u.type)?Ct[u.type].fromJSON(d):e[u.type].fromJSON(d)}function a(u){return r({map(d){return d.empty()},reduceArray(d){return d},reduceObject(d,c){return c},reduceFlaggedOption({isSome:d,value:c},p){if(p.optionType==="closedInterval"){let y=p.inner.entries.lower,g=e[y.type];c.lower=g.fromJSON(p.rangeMin),c.upper=g.fromJSON(p.rangeMax)}return{isSome:d,value:c}},reduceOrUndefined(){}},u,void 0)}function s(u,d){return r({map(c,p){return c.toInput(p)},reduceArray(c){let p={fields:[],packed:[]};for(let{fields:y,packed:g}of c)y&&p.fields.push(...y),g&&p.packed.push(...g);return p},reduceObject(c,p){let y={fields:[],packed:[]};for(let g of c){let{fields:b,packed:m}=p[g];b&&y.fields.push(...b),m&&y.packed.push(...m)}return y},reduceFlaggedOption({isSome:c,value:p}){return{fields:p.fields,packed:c.packed.concat(p.packed??[])}},reduceOrUndefined(c){return{}}},u,d)}function f(u,d){return r({map(c,p){return c.toJSON(p)},reduceArray(c){return c.length===0||c.every(p=>p===null)?null:c},reduceObject(c,p){for(let y in p)p[y]===null&&delete p[y];return Object.keys(p).length===0?null:p},reduceFlaggedOption({isSome:c,value:p}){return c?p:null},reduceOrUndefined(c){return c??null}},u,d)}return{signableFromLayout:o,toInput:s,toJSON:i,fromJSON:l,empty:a,toJSONEssential:f}}function Fe(e,t,n,r,o){let{checkedTypeName:i}=r;if(i)return n.map(t[i],o,i);if(r.type==="array"){let l=r,a=o;l.staticLength!==null&&a===void 0&&(a=Array(l.staticLength).fill(void 0));let s=a?.map(f=>Fe(e,t,n,l.inner,f))??[];return n.reduceArray(s,l)}if(r.type==="option"){let{optionType:l,inner:a}=r;switch(l){case"closedInterval":case"flaggedOption":let s=o;return n.reduceFlaggedOption({isSome:n.map(e.Bool,s?.isSome,"Bool"),value:Fe(e,t,n,a,s?.value)},r);case"orUndefined":let f=o===void 0?void 0:Fe(e,t,n,a,o);return n.reduceOrUndefined(f,a);default:throw Error("bug")}}if(r.type==="object"){let{keys:l,entries:a}=r,s=o,f={};return l.forEach(u=>{f[u]=Fe(e,t,n,a[u],s?.[u])}),n.reduceObject(l,f)}return Ut.has(r.type)?n.map(Ct[r.type],o,r.type):n.map(e[r.type],o,r.type)}var rt={ZkappCommand:{type:"object",name:"ZkappCommand",docs:null,keys:["feePayer","accountUpdates","memo"],entries:{feePayer:{type:"object",name:"ZkappFeePayer",docs:null,keys:["body","authorization"],entries:{body:{type:"object",name:"FeePayerBody",docs:null,keys:["publicKey","fee","validUntil","nonce"],entries:{publicKey:{type:"PublicKey"},fee:{type:"UInt64"},validUntil:{type:"option",optionType:"orUndefined",inner:{type:"UInt32"}},nonce:{type:"UInt32"}},docEntries:{publicKey:null,fee:null,validUntil:null,nonce:null}},authorization:{type:"string"}},docEntries:{body:null,authorization:null}},accountUpdates:{type:"array",inner:{type:"object",name:"ZkappAccountUpdate",docs:"An account update in a zkApp transaction",keys:["body","authorization"],entries:{body:{type:"object",name:"AccountUpdateBody",docs:null,keys:["publicKey","tokenId","update","balanceChange","incrementNonce","events","actions","callData","callDepth","preconditions","useFullCommitment","implicitAccountCreationFee","mayUseToken","authorizationKind"],entries:{publicKey:{type:"PublicKey"},tokenId:{type:"TokenId"},update:{type:"object",name:"AccountUpdateModification",docs:null,keys:["appState","delegate","verificationKey","permissions","zkappUri","tokenSymbol","timing","votingFor"],entries:{appState:{type:"array",inner:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},staticLength:8},delegate:{type:"option",optionType:"flaggedOption",inner:{type:"PublicKey"}},verificationKey:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"VerificationKeyWithHash",docs:null,keys:["data","hash"],entries:{data:{type:"string"},hash:{type:"Field"}},docEntries:{data:null,hash:null}}},permissions:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"Permissions",docs:null,keys:["editState","access","send","receive","setDelegate","setPermissions","setVerificationKey","setZkappUri","editActionState","setTokenSymbol","incrementNonce","setVotingFor","setTiming"],entries:{editState:{type:"AuthRequired"},access:{type:"AuthRequired"},send:{type:"AuthRequired"},receive:{type:"AuthRequired"},setDelegate:{type:"AuthRequired"},setPermissions:{type:"AuthRequired"},setVerificationKey:{type:"AuthRequired"},setZkappUri:{type:"AuthRequired"},editActionState:{type:"AuthRequired"},setTokenSymbol:{type:"AuthRequired"},incrementNonce:{type:"AuthRequired"},setVotingFor:{type:"AuthRequired"},setTiming:{type:"AuthRequired"}},docEntries:{editState:null,access:null,send:null,receive:null,setDelegate:null,setPermissions:null,setVerificationKey:null,setZkappUri:null,editActionState:null,setTokenSymbol:null,incrementNonce:null,setVotingFor:null,setTiming:null}}},zkappUri:{type:"option",optionType:"flaggedOption",inner:{type:"string",checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"string"},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"ZkappUri"}},tokenSymbol:{type:"option",optionType:"flaggedOption",inner:{type:"string",checkedType:{type:"object",name:"Anonymous",docs:null,keys:["symbol","field"],entries:{symbol:{type:"string"},field:{type:"Field"}},docEntries:{symbol:"",field:""}},checkedTypeName:"TokenSymbol"}},timing:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"Timing",docs:null,keys:["initialMinimumBalance","cliffTime","cliffAmount","vestingPeriod","vestingIncrement"],entries:{initialMinimumBalance:{type:"UInt64"},cliffTime:{type:"UInt32"},cliffAmount:{type:"UInt64"},vestingPeriod:{type:"UInt32"},vestingIncrement:{type:"UInt64"}},docEntries:{initialMinimumBalance:null,cliffTime:null,cliffAmount:null,vestingPeriod:null,vestingIncrement:null}}},votingFor:{type:"option",optionType:"flaggedOption",inner:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"StateHash"}}},docEntries:{appState:null,delegate:null,verificationKey:null,permissions:null,zkappUri:null,tokenSymbol:null,timing:null,votingFor:null}},balanceChange:{type:"object",name:"BalanceChange",docs:null,keys:["magnitude","sgn"],entries:{magnitude:{type:"UInt64"},sgn:{type:"Sign"}},docEntries:{magnitude:null,sgn:null}},incrementNonce:{type:"Bool"},events:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null,checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"Events"},actions:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null,checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"Actions"},callData:{type:"Field"},callDepth:{type:"number"},preconditions:{type:"object",name:"Preconditions",docs:null,keys:["network","account","validWhile"],entries:{network:{type:"object",name:"NetworkPrecondition",docs:null,keys:["snarkedLedgerHash","blockchainLength","minWindowDensity","totalCurrency","globalSlotSinceGenesis","stakingEpochData","nextEpochData"],entries:{snarkedLedgerHash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},blockchainLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},minWindowDensity:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}},globalSlotSinceGenesis:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"GlobalSlotSinceGenesisInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},stakingEpochData:{type:"object",name:"EpochDataPrecondition",docs:null,keys:["ledger","seed","startCheckpoint","lockCheckpoint","epochLength"],entries:{ledger:{type:"object",name:"EpochLedgerPrecondition",docs:null,keys:["hash","totalCurrency"],entries:{hash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}}},docEntries:{hash:null,totalCurrency:null}},seed:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},startCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},lockCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},epochLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}}},docEntries:{ledger:null,seed:null,startCheckpoint:null,lockCheckpoint:null,epochLength:null}},nextEpochData:{type:"object",name:"EpochDataPrecondition",docs:null,keys:["ledger","seed","startCheckpoint","lockCheckpoint","epochLength"],entries:{ledger:{type:"object",name:"EpochLedgerPrecondition",docs:null,keys:["hash","totalCurrency"],entries:{hash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}}},docEntries:{hash:null,totalCurrency:null}},seed:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},startCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},lockCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},epochLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}}},docEntries:{ledger:null,seed:null,startCheckpoint:null,lockCheckpoint:null,epochLength:null}}},docEntries:{snarkedLedgerHash:null,blockchainLength:null,minWindowDensity:null,totalCurrency:null,globalSlotSinceGenesis:null,stakingEpochData:null,nextEpochData:null}},account:{type:"object",name:"AccountPrecondition",docs:null,keys:["balance","nonce","receiptChainHash","delegate","state","actionState","provedState","isNew"],entries:{balance:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"BalanceInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}},nonce:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"NonceInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},receiptChainHash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},delegate:{type:"option",optionType:"flaggedOption",inner:{type:"PublicKey"}},state:{type:"array",inner:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},staticLength:8},actionState:{type:"option",optionType:"flaggedOption",inner:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"ActionState"}},provedState:{type:"option",optionType:"flaggedOption",inner:{type:"Bool"}},isNew:{type:"option",optionType:"flaggedOption",inner:{type:"Bool"}}},docEntries:{balance:null,nonce:null,receiptChainHash:null,delegate:null,state:null,actionState:null,provedState:null,isNew:null}},validWhile:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"GlobalSlotSinceGenesisInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}}},docEntries:{network:null,account:null,validWhile:null}},useFullCommitment:{type:"Bool"},implicitAccountCreationFee:{type:"Bool"},mayUseToken:{type:"object",name:"MayUseToken",docs:null,keys:["parentsOwnToken","inheritFromParent"],entries:{parentsOwnToken:{type:"Bool"},inheritFromParent:{type:"Bool"}},docEntries:{parentsOwnToken:null,inheritFromParent:null}},authorizationKind:{type:"object",name:"AuthorizationKindStructured",docs:null,keys:["isSigned","isProved","verificationKeyHash"],entries:{isSigned:{type:"Bool"},isProved:{type:"Bool"},verificationKeyHash:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"VerificationKeyHash"}},docEntries:{isSigned:null,isProved:null,verificationKeyHash:null}}},docEntries:{publicKey:null,tokenId:null,update:null,balanceChange:null,incrementNonce:null,events:null,actions:null,callData:null,callDepth:null,preconditions:null,useFullCommitment:null,implicitAccountCreationFee:null,mayUseToken:null,authorizationKind:null}},authorization:{type:"object",name:"Control",docs:null,keys:["proof","signature"],entries:{proof:{type:"option",optionType:"orUndefined",inner:{type:"string"}},signature:{type:"option",optionType:"orUndefined",inner:{type:"string"}}},docEntries:{proof:null,signature:null}}},docEntries:{body:null,authorization:null}},staticLength:null},memo:{type:"string"}},docEntries:{feePayer:null,accountUpdates:null,memo:null}},AccountUpdate:{type:"object",name:"ZkappAccountUpdate",docs:"An account update in a zkApp transaction",keys:["body","authorization"],entries:{body:{type:"object",name:"AccountUpdateBody",docs:null,keys:["publicKey","tokenId","update","balanceChange","incrementNonce","events","actions","callData","callDepth","preconditions","useFullCommitment","implicitAccountCreationFee","mayUseToken","authorizationKind"],entries:{publicKey:{type:"PublicKey"},tokenId:{type:"TokenId"},update:{type:"object",name:"AccountUpdateModification",docs:null,keys:["appState","delegate","verificationKey","permissions","zkappUri","tokenSymbol","timing","votingFor"],entries:{appState:{type:"array",inner:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},staticLength:8},delegate:{type:"option",optionType:"flaggedOption",inner:{type:"PublicKey"}},verificationKey:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"VerificationKeyWithHash",docs:null,keys:["data","hash"],entries:{data:{type:"string"},hash:{type:"Field"}},docEntries:{data:null,hash:null}}},permissions:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"Permissions",docs:null,keys:["editState","access","send","receive","setDelegate","setPermissions","setVerificationKey","setZkappUri","editActionState","setTokenSymbol","incrementNonce","setVotingFor","setTiming"],entries:{editState:{type:"AuthRequired"},access:{type:"AuthRequired"},send:{type:"AuthRequired"},receive:{type:"AuthRequired"},setDelegate:{type:"AuthRequired"},setPermissions:{type:"AuthRequired"},setVerificationKey:{type:"AuthRequired"},setZkappUri:{type:"AuthRequired"},editActionState:{type:"AuthRequired"},setTokenSymbol:{type:"AuthRequired"},incrementNonce:{type:"AuthRequired"},setVotingFor:{type:"AuthRequired"},setTiming:{type:"AuthRequired"}},docEntries:{editState:null,access:null,send:null,receive:null,setDelegate:null,setPermissions:null,setVerificationKey:null,setZkappUri:null,editActionState:null,setTokenSymbol:null,incrementNonce:null,setVotingFor:null,setTiming:null}}},zkappUri:{type:"option",optionType:"flaggedOption",inner:{type:"string",checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"string"},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"ZkappUri"}},tokenSymbol:{type:"option",optionType:"flaggedOption",inner:{type:"string",checkedType:{type:"object",name:"Anonymous",docs:null,keys:["symbol","field"],entries:{symbol:{type:"string"},field:{type:"Field"}},docEntries:{symbol:"",field:""}},checkedTypeName:"TokenSymbol"}},timing:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"Timing",docs:null,keys:["initialMinimumBalance","cliffTime","cliffAmount","vestingPeriod","vestingIncrement"],entries:{initialMinimumBalance:{type:"UInt64"},cliffTime:{type:"UInt32"},cliffAmount:{type:"UInt64"},vestingPeriod:{type:"UInt32"},vestingIncrement:{type:"UInt64"}},docEntries:{initialMinimumBalance:null,cliffTime:null,cliffAmount:null,vestingPeriod:null,vestingIncrement:null}}},votingFor:{type:"option",optionType:"flaggedOption",inner:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"StateHash"}}},docEntries:{appState:null,delegate:null,verificationKey:null,permissions:null,zkappUri:null,tokenSymbol:null,timing:null,votingFor:null}},balanceChange:{type:"object",name:"BalanceChange",docs:null,keys:["magnitude","sgn"],entries:{magnitude:{type:"UInt64"},sgn:{type:"Sign"}},docEntries:{magnitude:null,sgn:null}},incrementNonce:{type:"Bool"},events:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null,checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"Events"},actions:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null,checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"Actions"},callData:{type:"Field"},callDepth:{type:"number"},preconditions:{type:"object",name:"Preconditions",docs:null,keys:["network","account","validWhile"],entries:{network:{type:"object",name:"NetworkPrecondition",docs:null,keys:["snarkedLedgerHash","blockchainLength","minWindowDensity","totalCurrency","globalSlotSinceGenesis","stakingEpochData","nextEpochData"],entries:{snarkedLedgerHash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},blockchainLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},minWindowDensity:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}},globalSlotSinceGenesis:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"GlobalSlotSinceGenesisInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},stakingEpochData:{type:"object",name:"EpochDataPrecondition",docs:null,keys:["ledger","seed","startCheckpoint","lockCheckpoint","epochLength"],entries:{ledger:{type:"object",name:"EpochLedgerPrecondition",docs:null,keys:["hash","totalCurrency"],entries:{hash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}}},docEntries:{hash:null,totalCurrency:null}},seed:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},startCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},lockCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},epochLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}}},docEntries:{ledger:null,seed:null,startCheckpoint:null,lockCheckpoint:null,epochLength:null}},nextEpochData:{type:"object",name:"EpochDataPrecondition",docs:null,keys:["ledger","seed","startCheckpoint","lockCheckpoint","epochLength"],entries:{ledger:{type:"object",name:"EpochLedgerPrecondition",docs:null,keys:["hash","totalCurrency"],entries:{hash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}}},docEntries:{hash:null,totalCurrency:null}},seed:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},startCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},lockCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},epochLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}}},docEntries:{ledger:null,seed:null,startCheckpoint:null,lockCheckpoint:null,epochLength:null}}},docEntries:{snarkedLedgerHash:null,blockchainLength:null,minWindowDensity:null,totalCurrency:null,globalSlotSinceGenesis:null,stakingEpochData:null,nextEpochData:null}},account:{type:"object",name:"AccountPrecondition",docs:null,keys:["balance","nonce","receiptChainHash","delegate","state","actionState","provedState","isNew"],entries:{balance:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"BalanceInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}},nonce:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"NonceInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},receiptChainHash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},delegate:{type:"option",optionType:"flaggedOption",inner:{type:"PublicKey"}},state:{type:"array",inner:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},staticLength:8},actionState:{type:"option",optionType:"flaggedOption",inner:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"ActionState"}},provedState:{type:"option",optionType:"flaggedOption",inner:{type:"Bool"}},isNew:{type:"option",optionType:"flaggedOption",inner:{type:"Bool"}}},docEntries:{balance:null,nonce:null,receiptChainHash:null,delegate:null,state:null,actionState:null,provedState:null,isNew:null}},validWhile:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"GlobalSlotSinceGenesisInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}}},docEntries:{network:null,account:null,validWhile:null}},useFullCommitment:{type:"Bool"},implicitAccountCreationFee:{type:"Bool"},mayUseToken:{type:"object",name:"MayUseToken",docs:null,keys:["parentsOwnToken","inheritFromParent"],entries:{parentsOwnToken:{type:"Bool"},inheritFromParent:{type:"Bool"}},docEntries:{parentsOwnToken:null,inheritFromParent:null}},authorizationKind:{type:"object",name:"AuthorizationKindStructured",docs:null,keys:["isSigned","isProved","verificationKeyHash"],entries:{isSigned:{type:"Bool"},isProved:{type:"Bool"},verificationKeyHash:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"VerificationKeyHash"}},docEntries:{isSigned:null,isProved:null,verificationKeyHash:null}}},docEntries:{publicKey:null,tokenId:null,update:null,balanceChange:null,incrementNonce:null,events:null,actions:null,callData:null,callDepth:null,preconditions:null,useFullCommitment:null,implicitAccountCreationFee:null,mayUseToken:null,authorizationKind:null}},authorization:{type:"object",name:"Control",docs:null,keys:["proof","signature"],entries:{proof:{type:"option",optionType:"orUndefined",inner:{type:"string"}},signature:{type:"option",optionType:"orUndefined",inner:{type:"string"}}},docEntries:{proof:null,signature:null}}},docEntries:{body:null,authorization:null}},Account:{type:"object",name:"Account",docs:null,keys:["publicKey","tokenId","tokenSymbol","balance","nonce","receiptChainHash","delegate","votingFor","timing","permissions","zkapp"],entries:{publicKey:{type:"PublicKey"},tokenId:{type:"TokenId"},tokenSymbol:{type:"string"},balance:{type:"UInt64"},nonce:{type:"UInt32"},receiptChainHash:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"ReceiptChainHash"},delegate:{type:"option",optionType:"orUndefined",inner:{type:"PublicKey"}},votingFor:{type:"Field"},timing:{type:"object",name:"AccountTiming",docs:null,keys:["isTimed","initialMinimumBalance","cliffTime","cliffAmount","vestingPeriod","vestingIncrement"],entries:{isTimed:{type:"Bool"},initialMinimumBalance:{type:"UInt64"},cliffTime:{type:"UInt32"},cliffAmount:{type:"UInt64"},vestingPeriod:{type:"UInt32"},vestingIncrement:{type:"UInt64"}},docEntries:{isTimed:null,initialMinimumBalance:null,cliffTime:null,cliffAmount:null,vestingPeriod:null,vestingIncrement:null}},permissions:{type:"object",name:"Permissions",docs:null,keys:["editState","access","send","receive","setDelegate","setPermissions","setVerificationKey","setZkappUri","editActionState","setTokenSymbol","incrementNonce","setVotingFor","setTiming"],entries:{editState:{type:"AuthRequired"},access:{type:"AuthRequired"},send:{type:"AuthRequired"},receive:{type:"AuthRequired"},setDelegate:{type:"AuthRequired"},setPermissions:{type:"AuthRequired"},setVerificationKey:{type:"AuthRequired"},setZkappUri:{type:"AuthRequired"},editActionState:{type:"AuthRequired"},setTokenSymbol:{type:"AuthRequired"},incrementNonce:{type:"AuthRequired"},setVotingFor:{type:"AuthRequired"},setTiming:{type:"AuthRequired"}},docEntries:{editState:null,access:null,send:null,receive:null,setDelegate:null,setPermissions:null,setVerificationKey:null,setZkappUri:null,editActionState:null,setTokenSymbol:null,incrementNonce:null,setVotingFor:null,setTiming:null}},zkapp:{type:"option",optionType:"orUndefined",inner:{type:"object",name:"ZkappAccount",docs:null,keys:["appState","verificationKey","zkappVersion","actionState","lastActionSlot","provedState","zkappUri"],entries:{appState:{type:"array",inner:{type:"Field"},staticLength:8},verificationKey:{type:"option",optionType:"orUndefined",inner:{type:"object",name:"VerificationKeyWithHash",docs:null,keys:["data","hash"],entries:{data:{type:"string"},hash:{type:"Field"}},docEntries:{data:null,hash:null}}},zkappVersion:{type:"UInt32"},actionState:{type:"array",inner:{type:"Field"},staticLength:5},lastActionSlot:{type:"UInt32"},provedState:{type:"Bool"},zkappUri:{type:"string"}},docEntries:{appState:null,verificationKey:null,zkappVersion:null,actionState:null,lastActionSlot:null,provedState:null,zkappUri:null}}}},docEntries:{publicKey:null,tokenId:null,tokenSymbol:null,balance:null,nonce:null,receiptChainHash:null,delegate:null,votingFor:null,timing:null,permissions:null,zkapp:null}}};var e2={PublicKey:v,UInt64:Y,UInt32:$,TokenId:J0,Field:k,Bool:R,AuthRequired:q0,Sign:Ie},t2={ZkappUri:V0,TokenSymbol:D0,StateHash:L0,Events:Z0,Actions:Tt,ActionState:X0,VerificationKeyHash:$0,ReceiptChainHash:G0},{signableFromLayout:Pt,toJSONEssential:H6,empty:N6}=W0(e2,t2),me=Pt(rt.ZkappCommand),Ht=Pt(rt.AccountUpdate),R6=Pt(rt.Account);function n2(e){let t=ue(e);if(t>32)throw Error("Memo.fromString: string too long");return`${String.fromCharCode(t)}${e}`+"\0".repeat(32-t)}function r2(e){let t=ue(e);if(t!==34)throw Error(`Memo.toString: length ${t} does not equal 34`);if(e[0]!=="")throw Error("Memo.toString: expected memo to start with 0x01 byte");let n=e.charCodeAt(1);if(n>32)throw Error("Memo.toString: invalid length encoding");let r=X(e).slice(2,2+n);return Xe(r)}function i2(e){let t=H.toBits(e),n=tt(C.bits(t));return Q(F.zkappMemo,n)}var Nt=34,j0=J({toBytes(e){return X(e)},readBytes(e,t){let n=t+Nt;return[Xe(e.slice(t,n)),n]}}),H={fromString:n2,toString:r2,hash:i2,...Ze(j0,Nt*8),...j(j0,O.userCommandMemo),sizeInBytes:Nt,empty(){return H.fromString("")},toValidString(e=""){if(ue(e)>32)throw Error("Memo: string too long");return e}};var zt=pt(_t(),1);var b1=0x01n,S1=0x00n,g1=W(P({r:k,s:B},["r","s"]),Be.signature),N={...g1,...j(g1,O.signature),toJSON({r:e,s:t}){return{field:k.toJSON(e),scalar:B.toJSON(t)}},fromJSON({field:e,scalar:t}){let n=k.fromJSON(e),r=B.fromJSON(t);return{r:n,s:r}},dummy(){return{r:k(1),s:B(1)}}};function Kt(e,t,n){return Lt({fields:[e]},t,n)}function Jt(e,t,n,r){return Dt(e,{fields:[t]},n,r)}function Lt(e,t,n){let r=I.scale(I.generatorMina,t),o=m2(e,r,t,n);if(B.equal(o,0n))throw Error("sign: derived nonce is 0");let{x:i,y:l}=I.scale(I.generatorMina,o),a=k.isEven(l)?o:B.negate(o),s=k1(e,r,i,n),f=B.add(a,B.mul(s,t));return{r:i,s:f}}function m2(e,t,n,r){let{x:o,y:i}=t,l=k(n),a=r==="mainnet"?b1:S1,s=Ft.append(e,{fields:[o,i,l],packed:[[a,8]]}),u=de(s).map(k.toBits).flat(),d=Ve(u),c=(0,zt.blake2b)(Uint8Array.from(d),void 0,32);return c[c.length-1]&=63,B.fromBytes([...c])}function k1(e,t,n,r){let{x:o,y:i}=t,l=Ft.append(e,{fields:[o,i,n]}),a=r==="mainnet"?F.signatureMainnet:F.signatureTestnet;return Q(a,de(l))}function Dt(e,t,n,r){let{r:o,s:i}=e,l=v.toGroup(n),a=k1(t,l,o,r),{scale:s,one:f,sub:u}=Z,d=u(s(f,i),s(I.toProjective(l),a));try{let{x:c,y:p}=I.fromProjective(d);return k.isEven(p)&&k.equal(c,o)}catch{return!1}}function qt(e,t,n){let r=I.scale(I.generatorMina,t),o=y2(e,r,t,n);if(B.equal(o,0n))throw Error("sign: derived nonce is 0");let{x:i,y:l}=I.scale(I.generatorMina,o),a=k.isEven(l)?o:B.negate(o),s=v1(e,r,i,n),f=B.add(a,B.mul(s,t));return{r:i,s:f}}function Vt(e,t,n,r){try{let{r:o,s:i}=e,l=v.toGroup(n),a=v1(t,l,o,r),{scale:s,one:f,sub:u}=Z,d=u(s(f,i),s(I.toProjective(l),a)),{x:c,y:p}=I.fromProjective(d);return k.isEven(p)&&k.equal(c,o)}catch{return!1}}function y2(e,t,n,r){let{x:o,y:i}=t,l=B.toBits(n),s=se([Number(r==="mainnet"?b1:S1)]),f=C.append(e,{fields:[o,i],bits:[...l,...s]}),u=K0(f),d=Ve(u),c=(0,zt.blake2b)(Uint8Array.from(d),void 0,32);return c[c.length-1]&=63,B.fromBytes([...c])}function v1(e,t,n,r){let{x:o,y:i}=t,l=C.append(e,{fields:[o,i,n],bits:[]}),a=r==="mainnet"?F.signatureMainnet:F.signatureTestnet;return z0.hashWithPrefix(a,tt(l))}function Zt(e,t,n){let r=me.fromJSON(e),{commitment:o,fullCommitment:i}=x1(r),l=T.fromBase58(t),a=r.feePayer.body.publicKey,s=Kt(i,l,n);r.feePayer.authorization=N.toBase58(s);for(let f of r.accountUpdates){if(f.body.authorizationKind.isSigned===0n||!v.equal(f.body.publicKey,a))continue;let{useFullCommitment:u}=f.body,c=Kt(u===1n?i:o,l,n);f.authorization={signature:N.toBase58(c)}}return me.toJSON(r)}function Xt(e,t,n){let r=me.fromJSON(e),{commitment:o,fullCommitment:i}=x1(r),l=v.fromBase58(t),a=N.fromBase58(r.feePayer.authorization),s=Jt(a,i,l,n);if(!s)return!1;for(let f of r.accountUpdates){if(f.body.authorizationKind.isSigned===0n||!v.equal(f.body.publicKey,l))continue;let{useFullCommitment:u}=f.body,d=u===1n?i:o;if(f.authorization.signature===void 0)return!1;let c=N.fromBase58(f.authorization.signature);if(s=Jt(c,d,l,n),!s)return!1}return s}function x1(e){if(!b2(e))throw Error("zkapp command: invalid call depth");let t=E1(e.accountUpdates),n=A1(t),r=H.hash(H.fromBase58(e.memo)),o=h2(e.feePayer),i=Q(F.accountUpdateCons,[r,o,n]);return{commitment:n,fullCommitment:i}}function E1(e,t=0){let n=t>0?e:[...e],r=[];for(;n.length>0;){let o=n[0];if(o.body.callDepth<t)return r;n.shift();let i=E1(n,t+1);r.push({accountUpdate:o,children:i})}return r}function w1(e){S2(e);let t=Ht.toInput(e),n=de(t);return Q(F.body,n)}function A1(e){let t=0n;for(let n of[...e].reverse()){let r=A1(n.children),o=w1(n.accountUpdate),i=Q(F.accountUpdateNode,[o,r]);t=Q(F.accountUpdateCons,[i,t])}return t}function h2(e){let t=g2(e);return w1(t)}function g2({body:{fee:e,nonce:t,publicKey:n,validUntil:r},authorization:o}){let{body:i}=Ht.empty();return i.publicKey=n,i.balanceChange={magnitude:e,sgn:Ie(-1)},i.incrementNonce=R(!0),i.preconditions.network.globalSlotSinceGenesis={isSome:R(!0),value:{lower:$(0),upper:r??$.maxValue}},i.preconditions.account.nonce={isSome:R(!0),value:{lower:t,upper:t}},i.useFullCommitment=R(!0),i.implicitAccountCreationFee=R(!0),i.authorizationKind={isProved:R(!1),isSigned:R(!0),verificationKeyHash:k(ge.dummyVerificationKeyHash)},{body:i,authorization:{signature:o}}}function b2(e){let t=e.accountUpdates.map(r=>r.body.callDepth),n=t.shift()??0;if(n!==0)return!1;for(let r of t){if(r<0||r-n>1)return!1;n=r}return!0}function S2(e){let{isSigned:t,isProved:n,verificationKeyHash:r}=e.body.authorizationKind;if(n&&t)throw Error("Invalid authorization kind: Only one of `isProved` and `isSigned` may be true.");if(!n&&r!==k(ge.dummyVerificationKeyHash))throw Error(`Invalid authorization kind: If \`isProved\` is false, verification key hash must be ${ge.dummyVerificationKeyHash}, got ${r}`)}function I1(e,t,n){let r=Pe(e);return F1(r,t,n)}function B1(e,t,n){let r=He(e);return F1(r,t,n)}function F1(e,t,n){let r=P1(e),o=T.fromBase58(t),i=qt(r,o,n);return N.toJSON(i)}function T1(e,t,n,r){try{return C1(Pe(e),t,n,r)}catch{return!1}}function U1(e,t,n,r){try{return C1(He(e),t,n,r)}catch{return!1}}function C1(e,t,n,r){let o=P1(e),i=N.fromJSON(t),l=v.fromBase58(n);return Vt(i,o,l,r)}function P1({common:e,body:t}){return C.append(v2(e),k2(t))}function k2({tag:e,source:t,receiver:n,amount:r}){return[x2(e),v.toInputLegacy(t),v.toInputLegacy(n),C.bits(H1),C.bits(Y.toBits(r)),C.bits([!1])].reduce(C.append)}function v2({fee:e,feePayer:t,nonce:n,validUntil:r,memo:o}){return[C.bits(Y.toBits(e)),C.bits(H1),v.toInputLegacy(t),C.bits($.toBits(n)),C.bits($.toBits(r.value)),C.bits(H.toBits(o))].reduce(C.append)}function x2(e){let t={Payment:0,StakeDelegation:1}[e],n=[t&4,t&2,t&1].map(Boolean);return C.bits(n)}var H1=[!0,...Array(63).fill(!1)];function Pe({common:e,body:{receiver:t,amount:n}}){return{common:N1(e),body:{tag:"Payment",source:v.fromJSON(e.feePayer),receiver:v.fromJSON(t),amount:Y.fromJSON(n)}}}function He({common:e,body:{newDelegate:t}}){return{common:N1(e),body:{tag:"StakeDelegation",source:v.fromJSON(e.feePayer),receiver:v.fromJSON(t),amount:Y(0)}}}function N1(e){return{fee:Y.fromJSON(e.fee),feePayer:v.fromJSON(e.feePayer),nonce:$.fromJSON(e.nonce),validUntil:{type:"SinceGenesis",value:$.fromJSON(e.validUntil)},memo:H.fromString(e.memo)}}function R1(e,t,n){let r=O1(e),o=T.fromBase58(t),i=qt(r,o,n);return N.toJSON(i)}function M1(e,t,n,r){try{let o=O1(e),i=N.fromJSON(t),l=v.fromBase58(n);return Vt(i,o,l,r)}catch{return!1}}function O1(e){let t=X(e).map(n=>se([n]).reverse()).flat();return C.bits(t)}var $t=pt(_t(),1);var z1={r:k(1),s:B(1)};function K1(e,{berkeley:t=!1}={}){if(!t)return P2(e);let n=D1(Pe(e.data));return L1({signer:v.fromBase58(e.data.common.feePayer),signature:z1,payload:n})}function J1(e,{berkeley:t=!1}={}){if(!t)return H2(e);let n=D1(He(e.data));return L1({signer:v.fromBase58(e.data.common.feePayer),signature:z1,payload:n})}function L1(e){let t=C2.toBytes(e),n=(0,$t.blake2b)(Uint8Array.from(t),void 0,32);return q1.toBase58(n)}function D1({common:e,body:t}){let{tag:n,...r}=t;switch(n){case"Payment":return{common:e,body:{type:n,value:{receiver:t.receiver,amount:t.amount}}};case"StakeDelegation":let{receiver:o}=r;return{common:e,body:{type:n,value:{type:"SetDelegate",value:{newDelegate:o}}}}}}var ut=P({x:k,isOdd:R},["x","isOdd"]),E2=be([{type:"SinceGenesis",value:qe}]),w2=P({fee:De,feePayer:ut,nonce:qe,validUntil:E2,memo:kt},["fee","feePayer","nonce","validUntil","memo"]),A2=P({receiver:ut,amount:De},["receiver","amount"]),I2=P({newDelegate:ut},["newDelegate"]),B2=be([{type:"SetDelegate",value:I2}]),F2=be([{type:"Payment",value:A2},{type:"StakeDelegation",value:B2}]),T2=P({common:w2,body:F2},["common","body"]),U2=P({r:k,s:B},["r","s"]),C2=P({payload:T2,signer:ut,signature:U2},["payload","signer","signature"]),q1=j(J({toBytes(e){return[e.length,...e]},readBytes(e){return[Uint8Array.from(e.slice(1)),e.length]}}),O.transactionHash);function P2({data:e,signature:t}){let n=Z1(Pe(e));return V1({signer:v.fromBase58(e.common.feePayer),signature:N.fromJSON(t),payload:n})}function H2({data:e,signature:t}){let n=Z1(He(e));return V1({signer:v.fromBase58(e.common.feePayer),signature:N.fromJSON(t),payload:n})}function V1(e){let t=K2.toBase58(e),n=X(t),r=(0,$t.blake2b)(Uint8Array.from(n),void 0,32);return q1.toBase58(r)}function Z1({common:e,body:t}){let{tag:n,...r}=t,o={...e,validUntil:e.validUntil.value,feeToken:1n};switch(n){case"Payment":let i={...r,tokenId:1n};return{common:o,body:{type:n,value:i}};case"StakeDelegation":let{source:l,receiver:a}=r;return{common:o,body:{type:n,value:{type:"SetDelegate",value:{delegator:l,newDelegate:a}}}}}}var U=e=>W(e,1),st=U(U(De)),_1=U(U(qe)),N2=U(U(P({fee:U(st),feeToken:U(st),feePayer:v,nonce:_1,validUntil:_1,memo:U(kt)},["fee","feeToken","feePayer","nonce","validUntil","memo"]))),R2=U(U(P({source:v,receiver:v,tokenId:st,amount:U(st)},["source","receiver","tokenId","amount"]))),M2=P({delegator:v,newDelegate:v},["delegator","newDelegate"]),O2=U(be([{type:"SetDelegate",value:M2}])),_2=U(be([{type:"Payment",value:R2},{type:"StakeDelegation",value:O2}])),z2=U(P({common:N2,body:_2},["common","body"])),K2=$e(U(U(P({payload:z2,signer:U(v),signature:U(P({r:U(k),s:B},["r","s"]))},["payload","signer","signature"]))),O.signedCommandV1);function $1(e){return L2(k,e.x,!!e.isOdd)}function J2(e){let t=e.length/2,n=e.slice(0,t),r=e.slice(t);return{r:X1(k,n)[0],s:X1(B,r)[0]}}function L2(e,t,n=!1){let r=e.toBytes(t);return r[r.length-1]&=Number(n)<<7,r.map(o=>o.toString(16).split("").reverse().join("")).join("")}function X1(e,t){let n=[];for(let o=0;o<t.length;o+=2){let i=parseInt(t[o+1]+t[o],16);n.push(i)}let r=!!(n[n.length-1]>>7);return n[n.length-1]&=127,[e.fromBytes(n),r]}function G1({signature:e,payment:t,stake_delegation:n}){let r=J2(e),o=N.toBase58(r),[i,l]=(()=>{if(t!==null&&n===null){let s=t;return[{receiver:s.to,source:s.from,kind:"Payment",fee_payer:s.from,fee_token:s.token,fee:s.fee,amount:s.amount,valid_until:s.valid_until,memo:s.memo},s.nonce]}else if(t===null&&n!==null){let s=n;return[{receiver:s.new_delegate,source:s.delegator,kind:"Delegation",fee_payer:s.delegator,fee_token:"1",fee:s.fee,amount:null,valid_until:s.valid_until,memo:s.memo},s.nonce]}else throw Error("rosettaTransactionToSignedCommand: Unsupported transaction")})(),a=(()=>{let s=i.fee_payer,f=i.source,u=i.receiver,d=H.toBase58(H.fromString(i.memo??"")),c={fee:i.fee,fee_payer_pk:s,nonce:l,valid_until:i.valid_until,memo:d};if(i.kind==="Payment")return{common:c,body:["Payment",{source_pk:f,receiver_pk:u,amount:i.amount}]};if(i.kind==="Delegation")return{common:c,body:["Stake_delegation",["Set_delegate",{delegator:f,new_delegate:u}]]};throw Error("rosettaTransactionToSignedCommand has a bug")})();return{signature:o,signer:a.common.fee_payer_pk,payload:a}}function W1(e,t){let n=fe.hash,r=fe.hashToGroup,o=v.toGroup(T.toPublicKey(t)),i=I.generatorMina,l=B.random(),a=r([...e,...I.toFields(o)]);if(!a)throw Error("hashToGroup: Point is undefined");let s={x:a.x,y:a.y.x0},f=I.scale(s,t),u=I.scale(s,l),d=I.scale(i,l),c=n([...I.toFields(i),...I.toFields(o),...I.toFields(s),...I.toFields(f),...I.toFields(d),...I.toFields(u)]),p=te.add(l,te.mul(t,c));return{publicKey:ct(o),private:{c:c.toString(),g_r:ct(d),h_m_pk_r:ct(u)},public:{nullifier:ct(f),s:p.toString()}}}function ct({x:e,y:t}){return{x:e.toString(),y:t.toString()}}var D2="4294967295",j1=class{constructor(t){if(!t?.network)throw Error("Invalid Specified Network");let n=t.network.toLowerCase();if(n!=="mainnet"&&n!=="testnet")throw Error("Invalid Specified Network");this.network=n}genKeys(){let t=T.random(),n=T.toPublicKey(t);return{privateKey:T.toBase58(t),publicKey:v.toBase58(n)}}verifyKeypair({privateKey:t,publicKey:n}){let r=T.toPublicKey(T.fromBase58(t)),o=v.fromBase58(n);if(r.x!==o.x||r.isOdd!==o.isOdd)throw Error("Public key not derivable from private key");let i=me.toJSON(me.empty());i.feePayer.body.publicKey=n,i.memo=H.toBase58(H.empty());let l=Zt(i,t,this.network);if(!Xt(l,n,this.network))throw Error("Could not sign a transaction with private key");return!0}derivePublicKey(t){let n=T.fromBase58(t),r=T.toPublicKey(n);return v.toBase58(r)}signFields(t,n){let r=T.fromBase58(n),o=Lt({fields:t},r,"testnet");return{signature:N.toBase58(o),publicKey:v.toBase58(T.toPublicKey(r)),data:t}}verifyFields({data:t,signature:n,publicKey:r}){return Dt(N.fromBase58(n),{fields:t},v.fromBase58(r),"testnet")}signMessage(t,n){let r=T.fromBase58(n),o=v.toBase58(T.toPublicKey(r));return{signature:R1(t,n,this.network),publicKey:o,data:t}}verifyMessage({data:t,signature:n,publicKey:r}){return M1(t,n,r,this.network)}signPayment(t,n){let{fee:r,to:o,from:i,nonce:l,validUntil:a,memo:s}=ve(t),f=String(t.amount);return{signature:I1({common:{fee:r,feePayer:i,nonce:l,validUntil:a,memo:s},body:{receiver:o,amount:f}},n,this.network),publicKey:i,data:{to:o,from:i,fee:r,amount:f,nonce:l,memo:s,validUntil:a}}}verifyPayment({data:t,signature:n,publicKey:r}){let{fee:o,to:i,from:l,nonce:a,validUntil:s,memo:f}=ve(t),u=oe(t.amount);return T1({common:{fee:o,feePayer:l,nonce:a,validUntil:s,memo:f},body:{receiver:i,amount:u}},n,r,this.network)}signStakeDelegation(t,n){let{fee:r,to:o,from:i,nonce:l,validUntil:a,memo:s}=ve(t);return{signature:B1({common:{fee:r,feePayer:i,nonce:l,validUntil:a,memo:s},body:{newDelegate:o}},n,this.network),publicKey:i,data:{to:o,from:i,fee:r,nonce:l,memo:s,validUntil:a}}}verifyStakeDelegation({data:t,signature:n,publicKey:r}){let{fee:o,to:i,from:l,nonce:a,validUntil:s,memo:f}=ve(t);return U1({common:{fee:o,feePayer:l,nonce:a,validUntil:s,memo:f},body:{newDelegate:i}},n,r,this.network)}hashPayment({data:t,signature:n},r){let{fee:o,to:i,from:l,nonce:a,validUntil:s,memo:f}=ve(t),u=oe(t.amount);return K1({signature:n,data:{common:{fee:o,feePayer:l,nonce:a,validUntil:s,memo:f},body:{receiver:i,amount:u}}},r)}hashStakeDelegation({data:t,signature:n},r){let{fee:o,to:i,from:l,nonce:a,validUntil:s,memo:f}=ve(t);return J1({signature:n,data:{common:{fee:o,feePayer:l,nonce:a,validUntil:s,memo:f},body:{newDelegate:i}}},r)}signZkappCommand({feePayer:t,zkappCommand:n},r){let o=n.accountUpdates,i=this.getAccountUpdateMinimumFee(o),l=q2(t,i),{fee:a,nonce:s,validUntil:f,feePayer:u,memo:d}=l,c={feePayer:{body:{publicKey:u,fee:a,nonce:s,validUntil:f},authorization:""},accountUpdates:o,memo:H.toBase58(H.fromString(d))},p=Zt(c,r,this.network);return{signature:p.feePayer.authorization,publicKey:u,data:{zkappCommand:p,feePayer:l}}}verifyZkappCommand({data:t,publicKey:n,signature:r}){return r===t.zkappCommand.feePayer.authorization&&Xt(t.zkappCommand,n,this.network)}signedRosettaTransactionToSignedCommand(t){let n=JSON.parse(t),r=G1(n);return JSON.stringify({data:r})}publicKeyToRaw(t){let n=v.fromBase58(t);return $1(n)}signTransaction(t,n){if(typeof t=="string")return this.signMessage(t,n);if(B0(t))return this.signPayment(t,n);if(F0(t))return this.signStakeDelegation(t,n);if(I0(t))return this.signZkappCommand(t,n);throw Error(`Expected signable payload, got '${t}'.`)}verifyTransaction(t){if(P0(t))return this.verifyMessage(t);if(U0(t))return this.verifyPayment(t);if(C0(t))return this.verifyStakeDelegation(t);if(T0(t))return this.verifyZkappCommand(t);throw Error(`Expected signable payload, got '${JSON.stringify(t.data)}'.`)}getAccountUpdateMinimumFee(t){return .001*t.length}createNullifier(t,n){let r=T.fromBase58(n);return W1(t,r)}get networkId(){return this.network}};function oe(e){let t=BigInt(e);if(t<0)throw Error("input must be non-negative");return t.toString()}function ve(e){let t=H.toValidString(e.memo);return{to:e.to,from:e.from,fee:oe(e.fee),nonce:oe(e.nonce),memo:t,validUntil:oe(e.validUntil??D2)}}function q2(e,t){if(e.fee===void 0)throw Error("Missing fee in fee payer");let n=oe(e.fee);if(Number(n)<t)throw Error(`Fee must be greater than ${t}`);return{feePayer:e.feePayer,fee:n,nonce:oe(e.nonce),memo:H.toValidString(e.memo),validUntil:e.validUntil===void 0||e.validUntil===null?null:oe(e.validUntil)}}export{j1 as default};
/*! Bundled license information:

js-sha256/src/sha256.js:
  (**
   * [js-sha256]{@link https://github.com/emn178/js-sha256}
   *
   * @version 0.9.0
   * @author Chen, Yi-Cyuan [emn178@gmail.com]
   * @copyright Chen, Yi-Cyuan 2014-2017
   * @license MIT
   *)
*/
